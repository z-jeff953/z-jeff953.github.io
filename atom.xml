<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeff&#39;s blog</title>
  
  <subtitle>Keep Curious , Keep Learning !</subtitle>
  <link href="http://zjeff-953.gitee.io/zjeff/atom.xml" rel="self"/>
  
  <link href="http://zjeff-953.gitee.io/zjeff/"/>
  <updated>2022-01-27T15:35:33.406Z</updated>
  <id>http://zjeff-953.gitee.io/zjeff/</id>
  
  <author>
    <name>Jeffords zuo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>刷面筋 - 11 狙击阿里云</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2022/01/28/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2012%20%E5%AD%97%E8%8A%82%E9%9D%A2%E7%BB%8F/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2022/01/28/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2012%20%E5%AD%97%E8%8A%82%E9%9D%A2%E7%BB%8F/</id>
    <published>2022-01-27T16:09:16.729Z</published>
    <updated>2022-01-27T15:35:33.406Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="刷面筋-11-狙击阿里云"   >          <a href="#刷面筋-11-狙击阿里云" class="heading-link"><i class="fas fa-link"></i></a>刷面筋 - 11 狙击阿里云</h1>      <p>刷面筋 - 11 狙击阿里云</p><span id="more"></span>        <h2 id="1"   >          <a href="#1" class="heading-link"><i class="fas fa-link"></i></a>1</h2>      <p>阿里云 开放平台 后端开发 java 22届21年暑期实习 一二面hr面面经<br>笔试 3月19日 俩暴力题，AK<br>一面 3月23日 电面 40分钟<br>1.自我介绍<br>2.提问一些经历,最难忘的一次实习，为什么，学到什么，遇到的挑战，怎么解决的<br>3.最有挑战的一个项目，遇到什么问题，怎么解决的<br>4.jvm垃圾回收讲一下<br>5.提问Minor GC 和 Full GC相关；G1,CMS也提了下<br>6.讲俩机器学习项目<br>7.职业规划<br>8.面试官开始讲部门业务<br>9.提问了下双学位事情和一些校园经历<br>10.问了下实习几面，说的是三面（今天是一面，还有个二面技术面，最后还有一个hr面）</p><p>二面 3月25日 电面 45分钟<br>1.自我介绍<br>2.学位问题，经历提问<br>3.印象最深的一个项目，挑了一个项目讲了讲，然后自己直说了下几段实习基本一直在做crud所以没什么特别；讲一下数据量大的情况下怎么设计数据库，如果是mysql怎么解决<br>4.关系型数据库和非关系型数据库，以及区别，以及各其底层结构<br>5.b+树；红黑树；以及区别<br>6.讲笔试第二题<br>7.代码题（阿里伯乐平台），给的网址怎么都登不进去，说让一面面试官再重新安排吧。。<br>面试结束看到题目是：<br>给你一个长度为 n 的数组，其中只有一个数字出现了大于等于 n/2 次，问如何使用优秀的时空复杂度快速找到这个数字<br>力扣169. 多数元素<br>摩尔投票，不是很难的题。。然而页面还是出了网络问题<br>8.怎么平衡学习和实习<br>9.优点<br>10.在校期间成绩</p><p>补的手撕代码 3月26日<br>实现一个多线程类，并用该线程类实例化3个线程A,B,C；A线程打印字符A,B线程打印字符B，C线程打印字符C；启动这3个线程，要求启动线程的顺序为C线程-&gt;B线程-&gt;A线程，并且最后输出内容为：<br>A<br>B<br>C<br>不能用sleep函数，注意考虑线程安全问题。</p><p>力扣算法题刷久了，多线程却落下了，还看错题了改了二版才满足题目。。(代码附在最后了)</p><p>Hr面 3月31日 视频面 不到30分钟<br>都是常规问题吧<br>1.自我介绍<br>2.针对自我介绍经历提问，平时怎么解决问题的<br>3.今后职业规划，发展方向，为什么这么规划，你了解到架构师除了技术还需要那些技能<br>4.为什么选择开放平台<br>5.反问环节，说是下周前会出结果</p><p>感觉面试不是很难，轮数少，技术面也还好</p><p>4月2日凌晨意向</p><p>public class Main extends Thread {<br>    private static Object LOCK = new Object();<br>    private static int flag = 1;<br>    public static void main(String[] args) throws InterruptedException {<br>        Main A = new Main() {<br>            public void run() {<br>                synchronized (LOCK) {<br>                    while (flag != 1) {<br>                        LOCK.notifyAll();<br>                        try {<br>                            LOCK.wait();</p><pre><code>                    &#125; catch (InterruptedException e) &#123;                        e.printStackTrace();                    &#125;                &#125;                System.out.println(&quot;A&quot;);                flag = 2;                LOCK.notifyAll();            &#125;        &#125;    &#125;;    Main B = new Main() &#123;        public void run() &#123;            synchronized (LOCK) &#123;                while (flag != 2) &#123;                    LOCK.notifyAll();                    try &#123;                        LOCK.wait();                    &#125; catch (InterruptedException e) &#123;                        e.printStackTrace();                    &#125;                &#125;                System.out.println(&quot;B&quot;);                flag = 3;                LOCK.notifyAll();            &#125;        &#125;    &#125;;    Main C = new Main() &#123;        public void run() &#123;            synchronized (LOCK) &#123;                while (flag != 3) &#123;                    LOCK.notifyAll();                    try &#123;                        LOCK.wait();                    &#125; catch (InterruptedException e) &#123;                        e.printStackTrace();                    &#125;                &#125;                System.out.println(&quot;C&quot;);                flag = 1;                LOCK.notifyAll();            &#125;        &#125;    &#125;;    C.setName(&quot;C&quot;);    B.setName(&quot;B&quot;);    A.setName(&quot;A&quot;);    C.start();    B.start();    A.start();&#125;</code></pre><p>}<br>7</p><p>回复</p><p>收藏</p><p>分享</p><p>添加回复</p><p>作者：干饭人<br>链接：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/circle/discuss/ztkwSP/view/n2uI8I/" >https://leetcode-cn.com/circle/discuss/ztkwSP/view/n2uI8I/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>        <h2 id="2"   >          <a href="#2" class="heading-link"><i class="fas fa-link"></i></a>2</h2>              <h1 id="阿里面试题一面：-电话面试：80分32秒-二面：-视频面试：47分钟-三面：（视频面试：22分钟）四面：（交叉面，电话面试：30分钟）"   >          <a href="#阿里面试题一面：-电话面试：80分32秒-二面：-视频面试：47分钟-三面：（视频面试：22分钟）四面：（交叉面，电话面试：30分钟）" class="heading-link"><i class="fas fa-link"></i></a>阿里面试题一面：(电话面试：80分32秒)二面： (视频面试：47分钟)三面：（视频面试：22分钟）四面：（交叉面，电话面试：30分钟）</h1>      <p>2018-06-14阅读 14.2K0</p>        <h1 id="一面：-电话面试：80分32秒"   >          <a href="#一面：-电话面试：80分32秒" class="heading-link"><i class="fas fa-link"></i></a>一面：(电话面试：80分32秒)</h1>      <p>1.自我介绍？</p><p>2.做过哪些项目？项目中遇到哪些难点，你是怎样解决的？单点登录系统说一下？分布式缓存的使用场景？(说好的基础呢，上来就是项目，毫无准备，导致好多东西都记不起来了。面试官还说“那你说一个你记得的项目”，手动无奈。。。)</p><p>3.你实习的时候JDK用的是那个版本，这个版本有什么新的特性？</p><p>4.G1回收器和其他回收器有什么区别？</p><p>5.垃圾回收为什么会停顿？哪些对象可能作为GCRoots?</p><p>6.垃圾回收分代收集算法？为什么会有两个Survivor区？new一个对象会保存在哪里？</p><p>7.Java内存模型?volatile关键字，使用场景？原子性的理解？先行发生原则？</p><p>8.场景题：现在有三个线程，同时start，用什么方法可以保证线程执行的顺序，线程一执行完线程二执行，线程二执行完线程三执行？</p><p>9.你是怎么理解线程安全的？HashMap是线程安全的么？如果多个线程同时修改HashMap时会发生什么情况？</p><p>10.ConcurrentHashMap底层原理？每个版本的实现上有什么区别？</p><p>11.静态代理和动态代理的区别？动态代理是怎么实现的？</p><p>12.深拷贝和浅拷贝的区别？</p><p>13.你做过hadoop的项目，为什么要用hadoop？你们处理的文件是什么格式的？写了几个mapper几个reducer？</p><p>14.zookeeper你们用了几台，用来干什么的？一般情况下都是奇数台，那么如果一台挂了，偶数台如何实现master选举？zookeeper的两种启动模式？</p><p>15.TCP首部？TCP为什么是可靠的？三次握手四次挥手？</p><p>16.Solr是如何建立索引的？ Lucene的底层原理？</p><p>17.你平时喜欢做什么？看过哪些书？最近在看什么书？（这里有个段子，我：最近在看《HTTP权威指南》。面试官：什么？HTTP潜规则？我：？？？）</p><p><img   src="https://ask.qcloudimg.com/http-save/yehe-2057871/n9nilnl5ff.png?imageView2/2/w/1620" style=""  alt="img"></p>        <h1 id="二面：-视频面试：47分钟"   >          <a href="#二面：-视频面试：47分钟" class="heading-link"><i class="fas fa-link"></i></a>二面： (视频面试：47分钟)</h1>      <p>1.你那边怎么有点黑啊？（我靠，我也想说啊，暑假寝室集中供电，然而我们寝室没有电。发面经也不忘吐槽学校，简直坑啊。。。抱着台灯瑟瑟发抖。。。）</p><p>2.现在在哪里实习？实习主要做些什么？</p><p>3.说一下Java里面你最感兴趣的一个部分？</p><p>4.熟悉Java的哪些框架？用了Spring的哪些东西？Spring现在最新的版本是多少？</p><p>5.讲一下MVC设计模式，有什么框架用到了这个模式？</p><p>6.场景题：一个Controller调用两个Service，这两Service又都分别调用两个Dao，问其中用到了几个<span class="exturl"><a class="exturl__link"   href="https://cloud.tencent.com/solution/database?from=10680" >数据库</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>连接池的连接？</p><p>7.安全方面：如何防止 SQL注入？如何防止用户删除其他用户的信息？表单提交可以跨域么？自己写的接口如何防止被其他人恶意调用？</p><p>8.zookeeper偶数选举问题？（感觉很重视zookeeper啊）</p><p>9.hadoop为什么要将文件分块并且复制三份，复制两份不行么？这样不浪费空间么？namenode脑裂问题？zookeeper如何管理全局配置文件？你们的Hadoop 项目用到了几台机器，每个机器的作用？</p><p>10.Servlet是线程安全的么？</p><p>11.创建一个对象的详细过程？其中发生了些什么？</p><p>12.Java NIO你了解么？讲一讲你最熟悉的部分？</p><p>13.你在生活中有没有遇到什么神奇的事情，可以分享一下么？比如洒水车为什么老是在阴天或者快下雨的时候洒水？还有我和我老婆经常吵，阳台的花是早上浇好呢，还是晚上浇好呢？（我靠，这是什么套路）</p><p>14.你认为你身边的同学怎么样？如果你正在打游戏，你想让同学帮忙带瓶水，你觉得有多少人会帮你带？（这又是什么套路？让我去送水？）</p><p>15.你还有什么想问的？</p><p><img   src="https://ask.qcloudimg.com/http-save/yehe-2057871/icof9ocjcw.png?imageView2/2/w/1620" style=""  alt="img"></p>        <h1 id="三面：（视频面试：22分钟）"   >          <a href="#三面：（视频面试：22分钟）" class="heading-link"><i class="fas fa-link"></i></a>三面：（视频面试：22分钟）</h1>      <p>1.7岁一个阶段，说一说每一个阶段对你影响最大的一个人或事？</p><p>2.说一下你大学阶段做了些什么？</p><p>3.你感觉你前两个面试官怎么样？</p><p>4.春招的时候为什么没有去bat实习？</p><p>5.你当初准备暑期实习的话，是想学到些什么？现在感觉自己有哪些进步？</p><p>6.你还有什么想问的？（当然是万能的培养计划和晋升机制）</p>        <h1 id="四面：（交叉面，电话面试：30分钟）"   >          <a href="#四面：（交叉面，电话面试：30分钟）" class="heading-link"><i class="fas fa-link"></i></a>四面：（交叉面，电话面试：30分钟）</h1>      <p>1.自我介绍？</p><p>2.说一下最能代表你技术水平的项目吧？</p><p>3.maven如何进行依赖管理，如何解决依赖冲突？</p><p>4.maven的源和插件了解哪些？maven的生命周期？</p><p>5.如何保证分布式缓存的一致性？分布式session实现？</p><p>6.spring的bean的创建时机？依赖注入的时机？</p><p>7.你们的图片时怎么存储的，对应在数据库中时如何保存图片的信息的？</p><p>8.单点登录系统的实现？</p><p>9.项目中用到的JDK的哪些特性？</p><p>10.java8流式迭代的好处？</p><p>11.多线程如何在多个CPU上分布？线程调度算法有哪些？</p><p>12.线程调度和进程调度的区别？</p><p>13.项目中用到了哪些集合类？</p><p>14.说一下TreeMap的实现原理？红黑树的性质？红黑树遍历方式有哪些？如果key冲突如何解决？setColor()方法在什么时候用？什么时候会进行旋转和颜色转换？</p><p>15.你有什么想问的？</p><p>Java工程化、高性能及分布式、高性能、深入浅出。高架构。性能调优、Spring，MyBatis，Netty源码分析和<span class="exturl"><a class="exturl__link"   href="https://cloud.tencent.com/solution/bigdata?from=10680" >大数据</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>等多个知识点。如果你想拿高薪的，想学习的，想就业前景好的，想跟别人竞争能取得优势的，想进阿里面试但担心面试不过的，你都可以来</p>        <h2 id="9"   >          <a href="#9" class="heading-link"><i class="fas fa-link"></i></a>9</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/circle/discuss/ztkwSP/" >「阿里巴巴2023届应届生校园招聘」阿里云开放平台 暑期实习 内推|内含面经 - 力扣（LeetCode） (leetcode-cn.com)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>刷面筋 - 11 狙击阿里</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2022/01/19/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2011%20%E9%98%BF%E9%87%8C%E9%9D%A2%E7%BB%8F/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2022/01/19/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2011%20%E9%98%BF%E9%87%8C%E9%9D%A2%E7%BB%8F/</id>
    <published>2022-01-19T11:46:06.136Z</published>
    <updated>2022-02-19T04:46:22.315Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="刷面筋-11-狙击阿里"   >          <a href="#刷面筋-11-狙击阿里" class="heading-link"><i class="fas fa-link"></i></a>刷面筋 - 11 狙击阿里</h1>      <p>刷面筋 - 11 狙击阿里云</p><span id="more"></span>        <h2 id="1"   >          <a href="#1" class="heading-link"><i class="fas fa-link"></i></a>1</h2>      <p>阿里云 开放平台 后端开发 java 22届21年暑期实习 一二面hr面面经<br>笔试 3月19日 俩暴力题，AK<br>一面 3月23日 电面 40分钟<br>1.自我介绍<br>2.提问一些经历,最难忘的一次实习，为什么，学到什么，遇到的挑战，怎么解决的<br>3.最有挑战的一个项目，遇到什么问题，怎么解决的<br>4.jvm垃圾回收讲一下<br>5.提问Minor GC 和 Full GC相关；G1,CMS也提了下<br>6.讲俩机器学习项目<br>7.职业规划<br>8.面试官开始讲部门业务<br>9.提问了下双学位事情和一些校园经历<br>10.问了下实习几面，说的是三面（今天是一面，还有个二面技术面，最后还有一个hr面）</p><p>二面 3月25日 电面 45分钟<br>1.自我介绍<br>2.学位问题，经历提问<br>3.印象最深的一个项目，挑了一个项目讲了讲，然后自己直说了下几段实习基本一直在做crud所以没什么特别；讲一下数据量大的情况下怎么设计数据库，如果是mysql怎么解决<br>4.关系型数据库和非关系型数据库，以及区别，以及各其底层结构<br>5.b+树；红黑树；以及区别<br>6.讲笔试第二题<br>7.代码题（阿里伯乐平台），给的网址怎么都登不进去，说让一面面试官再重新安排吧。。<br>面试结束看到题目是：<br>给你一个长度为 n 的数组，其中只有一个数字出现了大于等于 n/2 次，问如何使用优秀的时空复杂度快速找到这个数字<br>力扣169. 多数元素<br>摩尔投票，不是很难的题。。然而页面还是出了网络问题<br>8.怎么平衡学习和实习<br>9.优点<br>10.在校期间成绩</p><p>补的手撕代码 3月26日<br>实现一个多线程类，并用该线程类实例化3个线程A,B,C；A线程打印字符A,B线程打印字符B，C线程打印字符C；启动这3个线程，要求启动线程的顺序为C线程-&gt;B线程-&gt;A线程，并且最后输出内容为：<br>A<br>B<br>C<br>不能用sleep函数，注意考虑线程安全问题。</p><p>力扣算法题刷久了，多线程却落下了，还看错题了改了二版才满足题目。。(代码附在最后了)</p><p>Hr面 3月31日 视频面 不到30分钟<br>都是常规问题吧<br>1.自我介绍<br>2.针对自我介绍经历提问，平时怎么解决问题的<br>3.今后职业规划，发展方向，为什么这么规划，你了解到架构师除了技术还需要那些技能<br>4.为什么选择开放平台<br>5.反问环节，说是下周前会出结果</p><p>感觉面试不是很难，轮数少，技术面也还好</p><p>4月2日凌晨意向<br><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object LOCK = <span class="keyword">new</span> Object();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Main A = <span class="keyword">new</span> Main() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (LOCK) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (flag != <span class="number">1</span>) &#123;</span><br><span class="line">                        LOCK.notifyAll();</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            LOCK.wait();</span><br><span class="line"></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                    flag = <span class="number">2</span>;</span><br><span class="line">                    LOCK.notifyAll();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Main B = <span class="keyword">new</span> Main() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (LOCK) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (flag != <span class="number">2</span>) &#123;</span><br><span class="line">                        LOCK.notifyAll();</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            LOCK.wait();</span><br><span class="line">    </span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">                    flag = <span class="number">3</span>;</span><br><span class="line">                    LOCK.notifyAll();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Main C = <span class="keyword">new</span> Main() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (LOCK) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (flag != <span class="number">3</span>) &#123;</span><br><span class="line">                        LOCK.notifyAll();</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            LOCK.wait();</span><br><span class="line">    </span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                    LOCK.notifyAll();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        C.setName(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">        B.setName(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">        A.setName(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">        C.start();</span><br><span class="line">        B.start();</span><br><span class="line">        A.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><br>作者：干饭人<br>链接：<span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/circle/discuss/ztkwSP/view/n2uI8I/" >https://leetcode-cn.com/circle/discuss/ztkwSP/view/n2uI8I/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>        <h2 id="2"   >          <a href="#2" class="heading-link"><i class="fas fa-link"></i></a>2</h2>      <p>阿里面试题一面：(电话面试：80分32秒)二面： (视频面试：47分钟)三面：（视频面试：22分钟）四面：（交叉面，电话面试：30分钟）</p><p>2018-06-14阅读 14.2K0</p>        <h1 id="一面：-电话面试：80分32秒"   >          <a href="#一面：-电话面试：80分32秒" class="heading-link"><i class="fas fa-link"></i></a>一面：(电话面试：80分32秒)</h1>      <p>1.自我介绍？</p><p>2.做过哪些项目？项目中遇到哪些难点，你是怎样解决的？单点登录系统说一下？分布式缓存的使用场景？(说好的基础呢，上来就是项目，毫无准备，导致好多东西都记不起来了。面试官还说“那你说一个你记得的项目”，手动无奈。。。)</p><p>3.你实习的时候JDK用的是那个版本，这个版本有什么新的特性？</p><p>4.G1回收器和其他回收器有什么区别？</p><p>5.垃圾回收为什么会停顿？哪些对象可能作为GCRoots?</p><p>6.垃圾回收分代收集算法？为什么会有两个Survivor区？new一个对象会保存在哪里？</p><p>7.Java内存模型?volatile关键字，使用场景？原子性的理解？先行发生原则？</p><p>8.场景题：现在有三个线程，同时start，用什么方法可以保证线程执行的顺序，线程一执行完线程二执行，线程二执行完线程三执行？</p><p>9.你是怎么理解线程安全的？HashMap是线程安全的么？如果多个线程同时修改HashMap时会发生什么情况？</p><p>10.ConcurrentHashMap底层原理？每个版本的实现上有什么区别？</p><p>11.静态代理和动态代理的区别？动态代理是怎么实现的？</p><p>12.深拷贝和浅拷贝的区别？</p><p>13.你做过hadoop的项目，为什么要用hadoop？你们处理的文件是什么格式的？写了几个mapper几个reducer？</p><p>14.zookeeper你们用了几台，用来干什么的？一般情况下都是奇数台，那么如果一台挂了，偶数台如何实现master选举？zookeeper的两种启动模式？</p><p>15.TCP首部？TCP为什么是可靠的？三次握手四次挥手？</p><p>16.Solr是如何建立索引的？ Lucene的底层原理？</p><p>17.你平时喜欢做什么？看过哪些书？最近在看什么书？（这里有个段子，我：最近在看《HTTP权威指南》。面试官：什么？HTTP潜规则？我：？？？）</p><p><img   src="https://ask.qcloudimg.com/http-save/yehe-2057871/n9nilnl5ff.png?imageView2/2/w/1620" style=""  alt="img"></p>        <h1 id="二面：-视频面试：47分钟"   >          <a href="#二面：-视频面试：47分钟" class="heading-link"><i class="fas fa-link"></i></a>二面： (视频面试：47分钟)</h1>      <p>1.你那边怎么有点黑啊？（我靠，我也想说啊，暑假寝室集中供电，然而我们寝室没有电。发面经也不忘吐槽学校，简直坑啊。。。抱着台灯瑟瑟发抖。。。）</p><p>2.现在在哪里实习？实习主要做些什么？</p><p>3.说一下Java里面你最感兴趣的一个部分？</p><p>4.熟悉Java的哪些框架？用了Spring的哪些东西？Spring现在最新的版本是多少？</p><p>5.讲一下MVC设计模式，有什么框架用到了这个模式？</p><p>6.场景题：一个Controller调用两个Service，这两Service又都分别调用两个Dao，问其中用到了几个<span class="exturl"><a class="exturl__link"   href="https://cloud.tencent.com/solution/database?from=10680" >数据库</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>连接池的连接？</p><p>7.安全方面：如何防止 SQL注入？如何防止用户删除其他用户的信息？表单提交可以跨域么？自己写的接口如何防止被其他人恶意调用？</p><p>8.zookeeper偶数选举问题？（感觉很重视zookeeper啊）</p><p>9.hadoop为什么要将文件分块并且复制三份，复制两份不行么？这样不浪费空间么？namenode脑裂问题？zookeeper如何管理全局配置文件？你们的Hadoop 项目用到了几台机器，每个机器的作用？</p><p>10.Servlet是线程安全的么？</p><p>11.创建一个对象的详细过程？其中发生了些什么？</p><p>12.Java NIO你了解么？讲一讲你最熟悉的部分？</p><p>13.你在生活中有没有遇到什么神奇的事情，可以分享一下么？比如洒水车为什么老是在阴天或者快下雨的时候洒水？还有我和我老婆经常吵，阳台的花是早上浇好呢，还是晚上浇好呢？（我靠，这是什么套路）</p><p>14.你认为你身边的同学怎么样？如果你正在打游戏，你想让同学帮忙带瓶水，你觉得有多少人会帮你带？（这又是什么套路？让我去送水？）</p><p>15.你还有什么想问的？</p><p><img   src="https://ask.qcloudimg.com/http-save/yehe-2057871/icof9ocjcw.png?imageView2/2/w/1620" style=""  alt="img"></p>        <h1 id="三面：（视频面试：22分钟）"   >          <a href="#三面：（视频面试：22分钟）" class="heading-link"><i class="fas fa-link"></i></a>三面：（视频面试：22分钟）</h1>      <p>1.7岁一个阶段，说一说每一个阶段对你影响最大的一个人或事？</p><p>2.说一下你大学阶段做了些什么？</p><p>3.你感觉你前两个面试官怎么样？</p><p>4.春招的时候为什么没有去bat实习？</p><p>5.你当初准备暑期实习的话，是想学到些什么？现在感觉自己有哪些进步？</p><p>6.你还有什么想问的？（当然是万能的培养计划和晋升机制）</p>        <h1 id="四面：（交叉面，电话面试：30分钟）"   >          <a href="#四面：（交叉面，电话面试：30分钟）" class="heading-link"><i class="fas fa-link"></i></a>四面：（交叉面，电话面试：30分钟）</h1>      <p>1.自我介绍？</p><p>2.说一下最能代表你技术水平的项目吧？</p><p>3.maven如何进行依赖管理，如何解决依赖冲突？</p><p>4.maven的源和插件了解哪些？maven的生命周期？</p><p>5.如何保证分布式缓存的一致性？分布式session实现？</p><p>6.spring的bean的创建时机？依赖注入的时机？</p><p>7.你们的图片时怎么存储的，对应在数据库中时如何保存图片的信息的？</p><p>8.单点登录系统的实现？</p><p>9.项目中用到的JDK的哪些特性？</p><p>10.java8流式迭代的好处？</p><p>11.多线程如何在多个CPU上分布？线程调度算法有哪些？</p><p>12.线程调度和进程调度的区别？</p><p>13.项目中用到了哪些集合类？</p><p>14.说一下TreeMap的实现原理？红黑树的性质？红黑树遍历方式有哪些？如果key冲突如何解决？setColor()方法在什么时候用？什么时候会进行旋转和颜色转换？</p><p>15.你有什么想问的？</p><p>Java工程化、高性能及分布式、高性能、深入浅出。高架构。性能调优、Spring，MyBatis，Netty源码分析和<span class="exturl"><a class="exturl__link"   href="https://cloud.tencent.com/solution/bigdata?from=10680" >大数据</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>等多个知识点。如果你想拿高薪的，想学习的，想就业前景好的，想跟别人竞争能取得优势的，想进阿里面试但担心面试不过的，你都可以来</p>        <h2 id="3"   >          <a href="#3" class="heading-link"><i class="fas fa-link"></i></a>3</h2>      <p>社招一年前端 </p><p>  三面过，等hr </p><p>  感觉是因为紧急缺人，所以技术面试比较简单 </p><p>  一面 </p><p>  前端小哥哥，应该是组内同事 </p><p>  盒模型 </p><p>  flex </p><p>  cdn </p><p>  http状态码 </p><p>  vue源码 </p><p>  请求头 </p><p>  package.json的内容 </p><p>  ^啥意思 </p><p>  package.lock.json的意思 </p><p>  二面 </p><p>  我猜是个后端，因为前端面的比较简单 </p><p>  如何写一个组件 </p><p>  为什么组内决定不用react而是vue </p><p>  es5和es6的区别 </p><p>  有点忘了，反正比较简单 </p><p>  三面 </p><p>  笔试 </p><p>  可能是个资深leader，或者职位比较高之类 </p><p>  让我自己做题目，有问题打字告诉他，然后可能忙去了 </p><p>  1.写一个react组件 </p><p>  模糊搜索框 </p><p>  表格 </p><p>  分页 </p><p>  loading </p><p>  2.遍历一个未知节点未知深度的树（对象） </p><p>  <a href="">排序</a>[32,34,5,6]排成最大的int类型数据653432 </p><p>  3.三种垂直居中样式</p>        <h2 id="4"   >          <a href="#4" class="heading-link"><i class="fas fa-link"></i></a>4</h2>      <p>阿里云面经<br>通过内推码进的群，然后在阿里招聘官网上面试</p><p>一面</p><p>因为白天还要上班，晚上下班回家时候面试官打电话过来面试了（突击~）</p><p>先自我介绍：…</p><p>谈一谈你对面向对象的理解<br>你认为Java中的接口和抽象类有什么区别，他们的用途是什么？（这里我说到了接口可以做为dto）<br>场景题：给你一个不确定高度的盒子，如何实现内容垂直水平居中<br>几种CSS属性的相对单位是相对于谁的<br>听说你用Vue比较多？请你说一下Vue的优点有哪些？<br>Vue更新节点的过程是什么？（说到了updateChildren函数和虚拟节点以及diff）<br>Diff算法作用，细节？<br>在获取元素过程中会触发回流吗？为什么操作DOM比较耗费性能<br>数据结构中 你了解过哪些树，以及他们的作用？（说到了B+树用作Mysql索引，被问到为什么）（红黑树用到了jdk1.8中的HashMap上，为什么用红黑树？优化查找效率）<br>算法题：有1元5元10元 100元的钞票，给你一个钱，如何用最小的钞票数量去凑够给的钱数。<br>请你说一下你的长处？（面试官说，你要喜欢Java的话，好好了解一下Java的底层）<br>二面（59min）（ps：二面面试官是阿里P8架构师，只能说牛逼~）主要问项目</p><p>面试官在晚上11点时候打来的电话，准备面试，因为她开会比较多，比较忙吧~<br>你现在大三吗？明年什么时候毕业呀？<br>上来问我做了几个项目，以及他的作用，意义，架构选型，开发周期<br>在快手做了什么项目，哪个项目你觉得最难？有什么收获？<br>好的，咱们来聊一聊React相关的东西，React的生命周期方法有哪些？<br>React的diff算法，组件通信有哪些？redux调用流程是什么样的？<br>首屏加载太慢情况下，你如何不用任何框架去解决？提出几个思路，并且讲一下优缺点<br>给你5000个节点，如何不卡死主线程下去渲染，尽量减少回流（说了使用文档碎片方法，减少回流）<br>cookie、session、token区别，解决什么场景<br>如何解决跨域？</p>        <h2 id="5"   >          <a href="#5" class="heading-link"><i class="fas fa-link"></i></a>5</h2>      <p>阿里云面经<br>通过内推码进的群，然后在阿里招聘官网上面试</p><p>一面</p><p>因为白天还要上班，晚上下班回家时候面试官打电话过来面试了（突击~）</p><p>先自我介绍：…</p><p>谈一谈你对面向对象的理解<br>你认为Java中的接口和抽象类有什么区别，他们的用途是什么？（这里我说到了接口可以做为dto）<br>场景题：给你一个不确定高度的盒子，如何实现内容垂直水平居中<br>几种CSS属性的相对单位是相对于谁的<br>听说你用Vue比较多？请你说一下Vue的优点有哪些？<br>Vue更新节点的过程是什么？（说到了updateChildren函数和虚拟节点以及diff）<br>Diff算法作用，细节？<br>在获取元素过程中会触发回流吗？为什么操作DOM比较耗费性能<br>数据结构中 你了解过哪些树，以及他们的作用？（说到了B+树用作Mysql索引，被问到为什么）（红黑树用到了jdk1.8中的HashMap上，为什么用红黑树？优化查找效率）<br>算法题：有1元5元10元 100元的钞票，给你一个钱，如何用最小的钞票数量去凑够给的钱数。<br>请你说一下你的长处？（面试官说，你要喜欢Java的话，好好了解一下Java的底层）<br>二面（59min）（ps：二面面试官是阿里P8架构师，只能说牛逼~）主要问项目</p><p>面试官在晚上11点时候打来的电话，准备面试，因为她开会比较多，比较忙吧~<br>你现在大三吗？明年什么时候毕业呀？<br>上来问我做了几个项目，以及他的作用，意义，架构选型，开发周期<br>在快手做了什么项目，哪个项目你觉得最难？有什么收获？<br>好的，咱们来聊一聊React相关的东西，React的生命周期方法有哪些？<br>React的diff算法，组件通信有哪些？redux调用流程是什么样的？<br>首屏加载太慢情况下，你如何不用任何框架去解决？提出几个思路，并且讲一下优缺点<br>给你5000个节点，如何不卡死主线程下去渲染，尽量减少回流（说了使用文档碎片方法，减少回流）<br>cookie、session、token区别，解决什么场景<br>如何解决跨域？<br>————————————————<br>版权声明：本文为CSDN博主「黎深」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/xxswkl_ZM/article/details/114959486" >https://blog.csdn.net/xxswkl_ZM/article/details/114959486</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="6"   >          <a href="#6" class="heading-link"><i class="fas fa-link"></i></a>6</h2>      <p>作者：神三元<br>链接：<span class="exturl"><a class="exturl__link"   href="https://www.nowcoder.com/discuss/392835" >https://www.nowcoder.com/discuss/392835</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：牛客网</p><p>个人目前状态，手里已经拿到<a href="">字节跳动</a>抖音前端架构组的offer，阿里终面已经结束，聊的不错，正在等待offer下来。下面分享一下<a href="">阿里云</a><a href="">面经</a>。<br>3.10晚 <a href="">阿里云</a>一面：</p><ul><li>HTTPS 的握手过程讲一讲。(讲了很久很细，面试官知道我理解，喊停了)  <ul><li>HTTPS 和 HTTP 的缓存有什么区别？(懵了) </li></ul></li><li>DOM API 掌握怎么样？ (不是很熟)  <ul><li>Element 和 Node 的区别(假装想了一会，不知道) </li></ul></li><li>XSS 攻击 Cookie相关的字段(HttpOnly, 解释了一下作用) </li><li>CSRF 攻击，解释一下 Cookie 的 SameSite 字段 (说了下，觉得可以，过)  <ul><li>chrome 最新的 xxx 特性是如何防范 CSRF 攻击 (这个真没听说过) </li></ul></li><li>fetch 和 xhr 有什么区别？(fetch 不熟)  <ul><li>好，解释一下 xhr 的 cors 过程(简单请求，非简单请求两种情况，说了下) </li></ul></li><li>React 闭包陷阱有什么好的解决办法吗？(说实话，简历上写了，实际上理解不深，只说了一种)  <ul><li>useReducer 可以解决你知道吗？ (当时真的不清楚，主要忘了闭包陷阱的表单场景，尴尬) </li></ul></li><li>看了你的小册子，能不能讲讲React.memo 和 JS 的 memorize 函数的区别(memorize函数当时不知道，以为是什么高深的<a href="">算法</a>，后来才发现就是cache函数，换了个名字而已。反正当时说不会)<ul><li>特意考了一题对React.memo的理解(擦，还是考React.memo, 三个场景，中间一个场景答错了，非常减分。这道题出的还是很有水平) </li></ul></li><li>WeakMap 和 Map 的性能有什么差别?(前者对 GC 更加友好，保持弱引用)  <ul><li>如果是在立即执行函数中，两者的性能有区别吗？(楞了一会，说强弱引用还是会有GC的区别，没影响)    <ul><li>换个说法吧，如果这个立即执行函数中有递归函数，两者性能有区别吗？(没 GET 到面试官的点啊，过了吧这题) </li></ul></li></ul></li><li>能不能说说 <a href="">AMD</a> 和 ESModule 有什么区别？(<a href="">AMD</a> 不熟，说ESModule，介绍了import、export以及导出引用的特点)<ul><li>那么你能不能告诉我 ESModule 对于 Tree-Shaking 有什么优势呢？(会做一些编译阶段的优化吧) </li></ul></li><li>async await 经过编译后和 generator 有啥联系？(问了两遍，还是不知道问的啥，直接说了async await 原理，他说你讲了太深，问的不是这个，过吧过吧) </li><li>有什么想要问我吗？ </li></ul><p>反问的问题:</p><ol><li>React 闭包陷阱如何用 useReducer 解决？ (面试官又说了一遍) </li><li>能不能说一说您正在做的业务中，遇到什么挑战，有什么解决思路？(说了很多，看的出来，阿里的大神都是特别有想法、有创意，最后也给我指引了一些未来的方向， 比如前端未来的容器化，对于中台页面的构建进行服务级别的调用，而不是去一个个组件去写，了解一下后端的安全容器概念，另外推荐我去看一看<a href="">蚂蚁金服</a>的微前端框架的实现。深深的佩服，开了眼界，收获很大!) </li></ol><p>另外，一面并没有发挥我的优势，问的问题跟我不太match，甚至有些问题都没有听懂，虽然看的出来面试官比较欣赏我，但个人觉得情况很不乐观。挂了也就挂了吧，我觉得挂了也正常。</p><p>后续: 3 月 11 号下午内推我的大佬来信，了解到昨天面我的是团队中公认技术最牛的专家，面试官给的评价是，虽然有一些问题，但是整体表现不错，在应届生里面已经可以了。好好等下轮。</p><p>3.19 晚 <a href="">阿里云</a>二面(37min)<br>(ps：等的太久了，都没紧张的感觉了)<br>二面主管问我先面试还是先笔试，因为有两个流程。我说先面试吧。</p><ul><li>首先自我介绍 </li><li>为什么要做你这个开源项目？后台数据哪来的？ </li><li>有 nodejs 相关的开发经验吗？(果断说没有，避免给后面挖坑) </li><li>HTTP 的 GET 和 POST 请求有什么区别？(我说了 4 个区别) </li><li>说一说 CSRF 和 XSS 攻击？(说了一堆，他说你讲的太细了，是不是最近看过之类的文章，我说没有) </li><li>HTTP 缓存能不能说一下？(强缓存，协商缓存，中间扯到代理了，讲了一堆，他说可以了) </li><li>你知道 JS 的语言标准是如何制定的吗？(确实不熟，说下去自己查查)  <ul><li>你用过哪些 ES 最新的语法，越新越好 </li></ul></li><li>你对 babel 了解吗？能不能说说几个 stage 代表什么意思？ </li><li>Vue 的响应式对数组是如何处理的？(重写数组方法，手动派发更新)  <ul><li>Object 为什么可以自动派发更新？ </li></ul></li><li>假如我在一个for循环中改变当前组件依赖的数据，改变一万次，会有什么效果？(讲到批量更新和 nextTick 原理，他表示可以) </li><li>假如让你设计一个适配 PC、手机和平板的项目，你有哪些布局方案？(首先是vh、vw，然后用淘宝出品的 lib-flexible 库进行 rem 适配，还有一种 flex + px 的适配方式) </li><li>CSS 当中以 @ 开头的属性有哪些？(我说了@media, @keyframes，后来提醒我还有@import，我补充这个是串行加载 CSS) </li><li>了解过前端当前的发展趋势吗，比如一些新的技术方向。(说了对PWA的看法，为什么会凉，flutter、electron、微前端，serverless) </li><li>了解过云计算吗？能不能讲一讲云计算的发展方向和前景？ </li><li>有什么兴趣爱好？ </li><li>对自己的职业规划是怎样的？(说了一大堆，他笑了笑，说今天就到这里吧，明天笔试) </li></ul><p>第二天主管告诉我不需要笔试了，笔试取消。</p><p>3.20 <a href="">阿里云</a>三面(57min)<br>聊了狠多，但是聊的很轻松，没有编程题，而且和个人经历强相关，就不整理题目了。</p><p>3.24 <a href="">阿里云</a>四面(40min)<br>让人自闭的一场交叉面。</p><ul><li>自我介绍 </li><li>为什么选择前端？ </li><li>你的职业规划是怎样的？ </li><li>项目中遇到了哪些挑战？ </li><li>说说你对前端架构的认识，如何设计出一个架构方案 </li><li>在一个大型项目中，JS 如何定位发生内存泄露的代码？ </li><li>Last-Modified 和 Etag 有什么区别？  <ul><li>Cache-Control 和 Last-Modified 的区别 </li></ul></li><li>后端语言对 nodejs 更熟还是 Java 更熟？(Java)  <ul><li>说说 String, StringBuilder 和 StringBuffer 的区别 </li></ul></li><li>跨域有哪些方案？ </li><li>React 受控组件和非受控组件的区别 </li></ul><p>3.26 <a href="">阿里云</a>终面(50min)</p><ul><li>自我介绍 </li><li>你自己在社区做过什么具有推动性的事情？ </li><li>你能不能说说自己比较擅长的数据结构有哪些？ </li><li>在学校参加过竞赛吗？ </li><li>你希望公司的环境是怎么样的？ </li><li>为什么不投<a href="">腾讯</a>？ </li><li><a href="">阿里云</a>和抖音你更想去哪里？为什么？ </li><li>你还有什么问题？</li></ul>        <h2 id="8"   >          <a href="#8" class="heading-link"><i class="fas fa-link"></i></a>8</h2>              <h2 id="9"   >          <a href="#9" class="heading-link"><i class="fas fa-link"></i></a>9</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://leetcode-cn.com/circle/discuss/ztkwSP/" >「阿里巴巴2023届应届生校园招聘」阿里云开放平台 暑期实习 内推|内含面经 - 力扣（LeetCode） (leetcode-cn.com)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>基于 ruoyi 开发 NFT 系统 - 01 - 搭建 CI 流水线，启动 ruoyi 项目</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2022/01/15/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%9F%BA%E4%BA%8E%20ruoyi%20%E5%BC%80%E5%8F%91%20NFT%20%E7%B3%BB%E7%BB%9F%20-%2001%20-%20%E6%90%AD%E5%BB%BA%20CI%20%E6%B5%81%E6%B0%B4%E7%BA%BF%EF%BC%8C%E5%90%AF%E5%8A%A8%20ruoyi%20%E9%A1%B9%E7%9B%AE/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2022/01/15/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%9F%BA%E4%BA%8E%20ruoyi%20%E5%BC%80%E5%8F%91%20NFT%20%E7%B3%BB%E7%BB%9F%20-%2001%20-%20%E6%90%AD%E5%BB%BA%20CI%20%E6%B5%81%E6%B0%B4%E7%BA%BF%EF%BC%8C%E5%90%AF%E5%8A%A8%20ruoyi%20%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-01-14T16:00:00.000Z</published>
    <updated>2022-01-17T01:45:30.044Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="基于-ruoyi-开发-NFT-系统-01-搭建-CI-流水线，启动-ruoyi-项目"   >          <a href="#基于-ruoyi-开发-NFT-系统-01-搭建-CI-流水线，启动-ruoyi-项目" class="heading-link"><i class="fas fa-link"></i></a>基于 ruoyi 开发 NFT 系统 - 01 - 搭建 CI 流水线，启动 ruoyi 项目</h1>      <span id="more"></span>        <h2 id="1-gitlab-安装和使用"   >          <a href="#1-gitlab-安装和使用" class="heading-link"><i class="fas fa-link"></i></a>1. gitlab 安装和使用</h2>              <h3 id="1-1-gitlab-汉化版镜像"   >          <a href="#1-1-gitlab-汉化版镜像" class="heading-link"><i class="fas fa-link"></i></a>1.1 gitlab 汉化版镜像</h3>      <p>汉化的 GitLab 社区版</p><p><span class="exturl"><a class="exturl__link"   href="https://hub.docker.com/r/twang2218/gitlab-ce-zh" >twang2218/gitlab-ce-zh - Docker Image | Docker Hub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>下面使用 docker-compose 安装启动 gitlab</p>        <h3 id="1-2-docker-compose-yml"   >          <a href="#1-2-docker-compose-yml" class="heading-link"><i class="fas fa-link"></i></a>1.2 docker-compose.yml</h3>      <figure class="highlight yml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">gitlab:</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">&#x27;twang2218/gitlab-ce-zh:latest&#x27;</span></span><br><span class="line">      <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">&#x27;你的云服务器ip&#x27;</span></span><br><span class="line">      <span class="attr">environment:</span></span><br><span class="line">        <span class="attr">TZ:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">        <span class="attr">GITLAB_OMNIBUS_CONFIG:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 8822</span></span><br><span class="line"><span class="string">          external_url &#x27;http://你的云服务器ip:1000&#x27;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;time_zone&#x27;] = &#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_enable&#x27;] = true</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_address&#x27;] = &quot;smtp.qq.com&quot;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_port&#x27;] = 465</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_user_name&#x27;] = &quot;你的@qq.com&quot;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_password&#x27;] = &quot;你的邮箱授权码&quot;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_authentication&#x27;] = &quot;login&quot;</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;smtp_tls&#x27;] = true</span></span><br><span class="line"><span class="string">          gitlab_rails[&#x27;gitlab_email_from&#x27;] = &#x27;你的@qq.com&#x27;</span></span><br><span class="line"><span class="string"></span>      <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;1000:1000&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;8443:443&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;8822:22&#x27;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./config:/etc/gitlab</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./data:/var/opt/gitlab</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./logs:/var/log/gitlab</span></span><br></pre></td></tr></table></div></figure>        <h3 id="1-3-使用-docker-compose-启动容器"   >          <a href="#1-3-使用-docker-compose-启动容器" class="heading-link"><i class="fas fa-link"></i></a>1.3 使用 docker-compose 启动容器</h3>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></div></figure><p>验证是否启动</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1000</span><br></pre></td></tr></table></div></figure><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202201170756671.png" alt="image-20220117075656636"></p><p>有内容就说明启动成功了。</p>        <h3 id="1-4-使用-nginx-转发暴露端口"   >          <a href="#1-4-使用-nginx-转发暴露端口" class="heading-link"><i class="fas fa-link"></i></a>1.4 使用 nginx 转发暴露端口</h3>      <p>安装</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></div></figure><p>配置</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></div></figure><p>写入如下配置</p><figure class="highlight nginx"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server_name</span>  <span class="number">127.0.0.1:1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>   http://127.0.0.1:1000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>打开 <code>ip：1001</code> 查看 <code>gitlab</code> 下图是注册登录后</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202201170801069.png" alt="image-20220117080111968"></p>        <h3 id="1-5-配置-gitlab"   >          <a href="#1-5-配置-gitlab" class="heading-link"><i class="fas fa-link"></i></a>1.5 配置 gitlab</h3>      <p>上传你的密钥</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202201170815822.png" alt="image-20220117081520720"></p><p>进入容器并重置git账号的密码</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202201170845020.png" alt="image-20220117084545961"></p>        <h3 id="1-6-创建仓库"   >          <a href="#1-6-创建仓库" class="heading-link"><i class="fas fa-link"></i></a>1.6 创建仓库</h3>      <p>创建群组<code>ntf-art</code>，创建前端项目</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202201170816792.png" alt="image-20220117081607690"></p>        <h2 id="2-配置流水线"   >          <a href="#2-配置流水线" class="heading-link"><i class="fas fa-link"></i></a>2. 配置流水线</h2>              <h2 id="3-运行项目"   >          <a href="#3-运行项目" class="heading-link"><i class="fas fa-link"></i></a>3. 运行项目</h2>              <h3 id="1-1-下载-ruoyi-cloud"   >          <a href="#1-1-下载-ruoyi-cloud" class="heading-link"><i class="fas fa-link"></i></a>1.1 下载 ruoyi-cloud</h3>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/y_project/RuoYi-Cloud</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">NFT系统开发</summary>
    
    
    
    <category term="NFT系统开发" scheme="http://zjeff-953.gitee.io/zjeff/categories/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NFT系统开发" scheme="http://zjeff-953.gitee.io/zjeff/tags/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>基于 ruoyi 开发 NFT 系统 - 03 - 增加一个模块</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2022/01/15/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%9F%BA%E4%BA%8E%20ruoyi%20%E5%BC%80%E5%8F%91%20NFT%20%E7%B3%BB%E7%BB%9F%20-%2002%20-%20%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9D%97/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2022/01/15/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%9F%BA%E4%BA%8E%20ruoyi%20%E5%BC%80%E5%8F%91%20NFT%20%E7%B3%BB%E7%BB%9F%20-%2002%20-%20%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%9D%97/</id>
    <published>2022-01-14T16:00:00.000Z</published>
    <updated>2022-01-15T16:10:20.853Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="基于-ruoyi-开发-NFT-系统-03-增加一个模块"   >          <a href="#基于-ruoyi-开发-NFT-系统-03-增加一个模块" class="heading-link"><i class="fas fa-link"></i></a>基于 ruoyi 开发 NFT 系统 - 03 - 增加一个模块</h1>      <span id="more"></span>]]></content>
    
    
    <summary type="html">NFT系统开发</summary>
    
    
    
    <category term="NFT系统开发" scheme="http://zjeff-953.gitee.io/zjeff/categories/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NFT系统开发" scheme="http://zjeff-953.gitee.io/zjeff/tags/NFT%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL - 一条数据查询语句是怎么执行的</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2022/01/13/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL%20-%20%E4%B8%80%E6%9D%A1%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E6%80%8E%E4%B9%88%E6%89%A7%E8%A1%8C%E7%9A%84/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2022/01/13/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL%20-%20%E4%B8%80%E6%9D%A1%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E6%80%8E%E4%B9%88%E6%89%A7%E8%A1%8C%E7%9A%84/</id>
    <published>2022-01-12T16:00:00.000Z</published>
    <updated>2022-01-13T08:11:52.209Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="MYSQL-一条数据查询语句是怎么执行的"   >          <a href="#MYSQL-一条数据查询语句是怎么执行的" class="heading-link"><i class="fas fa-link"></i></a>MYSQL - 一条数据查询语句是怎么执行的</h1>      <span id="more"></span>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="MYSQL" scheme="http://zjeff-953.gitee.io/zjeff/categories/MYSQL/"/>
    
    
    <category term="MYSQL" scheme="http://zjeff-953.gitee.io/zjeff/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>系统分析与设计 - 03 应用题</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/30/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2003%20%E5%BA%94%E7%94%A8%E9%A2%98/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/30/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2003%20%E5%BA%94%E7%94%A8%E9%A2%98/</id>
    <published>2021-12-30T06:49:42.461Z</published>
    <updated>2021-12-31T04:59:12.241Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="系统分析与设计-03-应用题"   >          <a href="#系统分析与设计-03-应用题" class="heading-link"><i class="fas fa-link"></i></a>系统分析与设计 - 03 应用题</h1>      <span id="more"></span>        <h2 id="第1章-系统分析与设计概述"   >          <a href="#第1章-系统分析与设计概述" class="heading-link"><i class="fas fa-link"></i></a>第1章 系统分析与设计概述</h2>              <h2 id="第2章-面向对象建模基础"   >          <a href="#第2章-面向对象建模基础" class="heading-link"><i class="fas fa-link"></i></a>第2章 面向对象建模基础</h2>              <h2 id="第3章-系统规划"   >          <a href="#第3章-系统规划" class="heading-link"><i class="fas fa-link"></i></a>第3章 系统规划</h2>              <h2 id="第4章-系统需求分析"   >          <a href="#第4章-系统需求分析" class="heading-link"><i class="fas fa-link"></i></a>第4章 系统需求分析</h2>              <h3 id="BPMN-需求建模方法"   >          <a href="#BPMN-需求建模方法" class="heading-link"><i class="fas fa-link"></i></a>BPMN 需求建模方法</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310943594.png" alt="image-20211231094335449"></p>        <h3 id="UML-系统功能需求建模方法"   >          <a href="#UML-系统功能需求建模方法" class="heading-link"><i class="fas fa-link"></i></a>UML 系统功能需求建模方法</h3>              <h4 id="用例图"   >          <a href="#用例图" class="heading-link"><i class="fas fa-link"></i></a>用例图</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310943239.png" alt="image-20211231094353132"></p>        <h4 id="活动图"   >          <a href="#活动图" class="heading-link"><i class="fas fa-link"></i></a>活动图</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310944544.png" alt="image-20211231094411425"></p>        <h4 id="泳道图"   >          <a href="#泳道图" class="heading-link"><i class="fas fa-link"></i></a>泳道图</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310944118.png" alt="image-20211231094454016"></p>        <h4 id="分析类图"   >          <a href="#分析类图" class="heading-link"><i class="fas fa-link"></i></a>分析类图</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310945970.png" alt="image-20211231094527855"></p>        <h2 id="第5章-系统架构设计"   >          <a href="#第5章-系统架构设计" class="heading-link"><i class="fas fa-link"></i></a>第5章 系统架构设计</h2>              <h3 id="系统总体架构"   >          <a href="#系统总体架构" class="heading-link"><i class="fas fa-link"></i></a>系统总体架构</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310936402.png" alt="image-20211231093644285"></p>        <h3 id="系统拓扑架构"   >          <a href="#系统拓扑架构" class="heading-link"><i class="fas fa-link"></i></a>系统拓扑架构</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310937860.png" alt="image-20211231093707699"></p>        <h3 id="系统数据架构"   >          <a href="#系统数据架构" class="heading-link"><i class="fas fa-link"></i></a>系统数据架构</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310938735.png" alt="image-20211231093807493"></p>        <h4 id="系统数据分层架构"   >          <a href="#系统数据分层架构" class="heading-link"><i class="fas fa-link"></i></a>系统数据分层架构</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310938133.png" alt="image-20211231093840030"></p>        <h4 id="系统数据治理架构"   >          <a href="#系统数据治理架构" class="heading-link"><i class="fas fa-link"></i></a>系统数据治理架构</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310938833.png" alt="image-20211231093847622"></p>        <h4 id="系统数据存储架构"   >          <a href="#系统数据存储架构" class="heading-link"><i class="fas fa-link"></i></a>系统数据存储架构</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310939210.png" alt="image-20211231093915054"></p>        <h3 id="系统应用架构"   >          <a href="#系统应用架构" class="heading-link"><i class="fas fa-link"></i></a>系统应用架构</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310939781.png" alt="image-20211231093942590"></p>        <h3 id="软件体系架构（软件架构）"   >          <a href="#软件体系架构（软件架构）" class="heading-link"><i class="fas fa-link"></i></a>软件体系架构（软件架构）</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310940658.png" alt="image-20211231094025467"></p>        <h4 id="软件技术架构"   >          <a href="#软件技术架构" class="heading-link"><i class="fas fa-link"></i></a>软件技术架构</h4>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112310940953.png" alt="image-20211231094047852"></p>        <h2 id="第6章-软件建模设计"   >          <a href="#第6章-软件建模设计" class="heading-link"><i class="fas fa-link"></i></a>第6章 软件建模设计</h2>              <h3 id="软件建模设计"   >          <a href="#软件建模设计" class="heading-link"><i class="fas fa-link"></i></a>软件建模设计</h3>              <h4 id="静态结构建模"   >          <a href="#静态结构建模" class="heading-link"><i class="fas fa-link"></i></a>静态结构建模</h4>              <h5 id="类图"   >          <a href="#类图" class="heading-link"><i class="fas fa-link"></i></a>类图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311049314.png" alt="image-20211231104901229"></p>        <h4 id="动态交互视图建模"   >          <a href="#动态交互视图建模" class="heading-link"><i class="fas fa-link"></i></a>动态交互视图建模</h4>              <h5 id="顺序图"   >          <a href="#顺序图" class="heading-link"><i class="fas fa-link"></i></a>顺序图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311048688.png" alt="image-20211231104811571"></p>        <h5 id="通信图"   >          <a href="#通信图" class="heading-link"><i class="fas fa-link"></i></a>通信图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311043982.png" alt="image-20211231104323849"></p>        <h4 id="状态机视图建模"   >          <a href="#状态机视图建模" class="heading-link"><i class="fas fa-link"></i></a>状态机视图建模</h4>              <h5 id="状态机图"   >          <a href="#状态机图" class="heading-link"><i class="fas fa-link"></i></a>状态机图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311047866.png" alt="image-20211231104752744"></p>        <h4 id="实现视图建模"   >          <a href="#实现视图建模" class="heading-link"><i class="fas fa-link"></i></a>实现视图建模</h4>              <h5 id="构件图"   >          <a href="#构件图" class="heading-link"><i class="fas fa-link"></i></a>构件图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311046851.png" alt="image-20211231104657722"></p>        <h5 id="部署图"   >          <a href="#部署图" class="heading-link"><i class="fas fa-link"></i></a>部署图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311047368.png" alt="image-20211231104710260"></p>        <h5 id="子系统与包图"   >          <a href="#子系统与包图" class="heading-link"><i class="fas fa-link"></i></a>子系统与包图</h5>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311047593.png" alt="image-20211231104726482"></p>        <h3 id="设计模式"   >          <a href="#设计模式" class="heading-link"><i class="fas fa-link"></i></a>设计模式</h3>              <h4 id="创建型模式"   >          <a href="#创建型模式" class="heading-link"><i class="fas fa-link"></i></a>创建型模式</h4>              <h5 id="单例模式"   >          <a href="#单例模式" class="heading-link"><i class="fas fa-link"></i></a>单例模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazySingleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> LazySingleton instance = <span class="keyword">null</span>;    <span class="comment">//保证 instance 在所有线程中同步</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LazySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;    <span class="comment">//private 避免类在外部被实例化</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> LazySingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//getInstance 方法前加同步</span></span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> LazySingleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HungrySingleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> HungrySingleton instance = <span class="keyword">new</span> HungrySingleton();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HungrySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HungrySingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h5 id="工厂模式"   >          <a href="#工厂模式" class="heading-link"><i class="fas fa-link"></i></a>工厂模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//抽象产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//具体产品：ProductA</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteProduct1</span> <span class="keyword">implements</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;具体产品1显示...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//具体产品：ProductB</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteProduct2</span> <span class="keyword">implements</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;具体产品2显示...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PRODUCT_A = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PRODUCT_B = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PRODUCT_C = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleFactory</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Product <span class="title">makeProduct</span><span class="params">(<span class="keyword">int</span> kind)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (kind) &#123;</span><br><span class="line">                <span class="keyword">case</span> Const.PRODUCT_A:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> ConcreteProduct1();</span><br><span class="line">                <span class="keyword">case</span> Const.PRODUCT_B:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> ConcreteProduct2();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h4 id="结构型模式"   >          <a href="#结构型模式" class="heading-link"><i class="fas fa-link"></i></a>结构型模式</h4>              <h5 id="适配器模式"   >          <a href="#适配器模式" class="heading-link"><i class="fas fa-link"></i></a>适配器模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> adapter;</span><br><span class="line"><span class="comment">//目标接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">request</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//适配者接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">specificRequest</span><span class="params">()</span></span>&#123;       </span><br><span class="line">        System.out.println(<span class="string">&quot;适配者中的业务代码被调用！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类适配器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassAdapter</span> <span class="keyword">extends</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">request</span><span class="params">()</span></span>&#123;</span><br><span class="line">        specificRequest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//客户端代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassAdapterTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类适配器模式测试：&quot;</span>);</span><br><span class="line">        Target target = <span class="keyword">new</span> ClassAdapter();</span><br><span class="line">        target.request();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h5 id="桥接模式"   >          <a href="#桥接模式" class="heading-link"><i class="fas fa-link"></i></a>桥接模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bridge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BridgeTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Implementor imple = <span class="keyword">new</span> ConcreteImplementorA();</span><br><span class="line">        Abstraction abs = <span class="keyword">new</span> RefinedAbstraction(imple);</span><br><span class="line">        abs.Operation();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现化角色</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Implementor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OperationImpl</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体实现化角色</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteImplementorA</span> <span class="keyword">implements</span> <span class="title">Implementor</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OperationImpl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;具体实现化(Concrete Implementor)角色被访问&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象化角色</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Abstraction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Implementor imple;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Abstraction</span><span class="params">(Implementor imple)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.imple = imple;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Operation</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展抽象化角色</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RefinedAbstraction</span> <span class="keyword">extends</span> <span class="title">Abstraction</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">RefinedAbstraction</span><span class="params">(Implementor imple)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(imple);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Operation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;扩展抽象化(Refined Abstraction)角色被访问&quot;</span>);</span><br><span class="line">        imple.OperationImpl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h4 id="行为型模式"   >          <a href="#行为型模式" class="heading-link"><i class="fas fa-link"></i></a>行为型模式</h4>              <h5 id="责任链模式"   >          <a href="#责任链模式" class="heading-link"><i class="fas fa-link"></i></a>责任链模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chainOfResponsibility;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChainOfResponsibilityPattern</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 组装责任链</span></span><br><span class="line">        Handler handler1 = <span class="keyword">new</span> ConcreteHandler1();</span><br><span class="line">        Handler handler2 = <span class="keyword">new</span> ConcreteHandler2();</span><br><span class="line">        handler1.setNext(handler2);</span><br><span class="line">        <span class="comment">// 提交请求</span></span><br><span class="line">        handler1.handleRequest(<span class="string">&quot;two&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象处理者角色</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Handler next;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(Handler next)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Handler <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理请求的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(String request)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体处理者角色1</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteHandler1</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(String request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (request.equals(<span class="string">&quot;one&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;具体处理者1负责处理该请求！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (getNext() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                getNext().handleRequest(request);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;没有人处理该请求！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体处理者角色2</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteHandler2</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(String request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (request.equals(<span class="string">&quot;two&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;具体处理者2负责处理该请求！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (getNext() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                getNext().handleRequest(request);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;没有人处理该请求！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h5 id="中介者模式"   >          <a href="#中介者模式" class="heading-link"><i class="fas fa-link"></i></a>中介者模式</h5>      <figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.biancheng.c.mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MediatorPattern</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Mediator md = <span class="keyword">new</span> ConcreteMediator();</span><br><span class="line">        Colleague c1, c2;</span><br><span class="line">        c1 = <span class="keyword">new</span> ConcreteColleague1();</span><br><span class="line">        c2 = <span class="keyword">new</span> ConcreteColleague2();</span><br><span class="line">        md.register(c1);</span><br><span class="line">        md.register(c2);</span><br><span class="line">        c1.send();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">        c2.send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象中介者</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Mediator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(Colleague colleague)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">relay</span><span class="params">(Colleague cl)</span></span>; <span class="comment">//转发</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体中介者</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteMediator</span> <span class="keyword">extends</span> <span class="title">Mediator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Colleague&gt; colleagues = <span class="keyword">new</span> ArrayList&lt;Colleague&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(Colleague colleague)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!colleagues.contains(colleague)) &#123;</span><br><span class="line">            colleagues.add(colleague);</span><br><span class="line">            colleague.setMedium(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">relay</span><span class="params">(Colleague cl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Colleague ob : colleagues) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!ob.equals(cl)) &#123;</span><br><span class="line">                ((Colleague) ob).receive();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象同事类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Mediator mediator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMedium</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mediator = mediator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体同事类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteColleague1</span> <span class="keyword">extends</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;具体同事类1收到请求。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;具体同事类1发出请求。&quot;</span>);</span><br><span class="line">        mediator.relay(<span class="keyword">this</span>); <span class="comment">//请中介者转发</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体同事类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteColleague2</span> <span class="keyword">extends</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;具体同事类2收到请求。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;具体同事类2发出请求。&quot;</span>);</span><br><span class="line">        mediator.relay(<span class="keyword">this</span>); <span class="comment">//请中介者转发</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="第7章-用户界面设计"   >          <a href="#第7章-用户界面设计" class="heading-link"><i class="fas fa-link"></i></a>第7章 用户界面设计</h2>              <h2 id="UML-分类"   >          <a href="#UML-分类" class="heading-link"><i class="fas fa-link"></i></a>UML 分类</h2>      <ul><li>用例图</li><li>静态图(Static diagram)<ul><li>类图</li><li>对象图</li><li>包图</li></ul></li><li>行为图(Behavior diagram)<ul><li>状态图</li></ul></li><li>交互图(Interactive diagram)<ul><li>顺序图</li><li>协作图</li><li>通信图</li></ul></li><li>实现图( Implementation diagram )<ul><li>活动图</li><li>构件图</li><li>部署图</li></ul></li></ul><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
    
    
    <summary type="html">系统分析与设计</summary>
    
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>系统分析与设计 - 02 知识总结</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/28/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2002%20%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/28/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2002%20%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</id>
    <published>2021-12-28T13:01:58.846Z</published>
    <updated>2021-12-31T05:02:29.050Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="系统分析与设计-02-知识总结"   >          <a href="#系统分析与设计-02-知识总结" class="heading-link"><i class="fas fa-link"></i></a>系统分析与设计 - 02 知识总结</h1>      <span id="more"></span>        <h2 id="第一章-系统分析与设计概述"   >          <a href="#第一章-系统分析与设计概述" class="heading-link"><i class="fas fa-link"></i></a>第一章 系统分析与设计概述</h2>              <h3 id="大纲"   >          <a href="#大纲" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>了解信息系统组成、类型、利益相关者、系统开发人员</p><p>理解信息系统类型、软件特性、软件质量属性<br>理解信息系统生命周期、系统开发活动<br>理解信息系统开发过程模型、技术特点、适用场景<br>了解系统开发策略、开发方法、开发工具等</p>        <h3 id="概述"   >          <a href="#概述" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>了解信息系统</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290820698.png" alt="image-20211229082049565"></p><p>了解信息系统组成</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290821778.png" alt="image-20211229082103686"></p><p>了解信息系统类型</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290821949.png" alt="image-20211229082113822"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290916923.png" alt="image-20211229091643780"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290917624.png" alt="image-20211229091708498"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290917712.png" alt="image-20211229091730576"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290917053.png" alt="image-20211229091746901"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290917413.png" alt="image-20211229091753282"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290918989.png" alt="image-20211229091803903"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290919679.png" alt="image-20211229091923605"></p><ol><li>业务处理系统</li><li>管理信息系统</li><li>决策支持系统</li><li>OA系统</li></ol><p>了解信息系统利益相关者</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290934621.png" alt="image-20211229093444566" style="zoom:50%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290935740.png" alt="image-20211229093509674" style="zoom: 50%;" /></p><p>了解信息系统开发人员</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290935847.png" alt="image-20211229093523731" style="zoom: 50%;" /></p><p>理解信息系统类型</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290942948.png" alt="image-20211229094206831"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290945354.png" alt="image-20211229094522258"></p><p>理解信息系统软件特性</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290947030.png" alt="image-20211229094705931"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290947225.png" alt="image-20211229094719108"></p><p>理解信息系统软件质量属性</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290947773.png" alt="image-20211229094729607"></p><p>理解信息系统生命周期</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290948072.png" alt="image-20211229094847970"></p><p>理解信息系统开发活动</p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211229094900836.png" alt="image-20211229094900836"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290949750.png" alt="image-20211229094911636"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290949138.png" alt="image-20211229094917063"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290949983.png" alt="image-20211229094923835"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290949101.png" alt="image-20211229094932022"></p><p>理解信息系统开发过程模型、技术特点、适用场景</p><ol><li>瀑布开发过程模型</li><li>选型开发过程模型</li><li>螺旋式开发过程模型</li><li>统一软件开发过程</li><li>敏捷软件开发过程模型</li></ol><p>了解系统开发策略</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290952195.png" alt="image-20211229095257060"></p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211229095303007.png" alt="image-20211229095303007"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290953735.png" alt="image-20211229095315557"></p><p>了解系统开发方法</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290953816.png" alt="image-20211229095332672"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290953857.png" alt="image-20211229095337703"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290953032.png" alt="image-20211229095342862"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290953382.png" alt="image-20211229095349243"></p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211229095358624.png" alt="image-20211229095358624"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290954097.png" alt="image-20211229095404917"></p><p>了解系统开发工具</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290954450.png" alt="image-20211229095417379" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112290954198.png" alt="image-20211229095433075"></p>        <h2 id="第二章-面向对象建模基础"   >          <a href="#第二章-面向对象建模基础" class="heading-link"><i class="fas fa-link"></i></a>第二章 面向对象建模基础</h2>              <h3 id="大纲-1"   >          <a href="#大纲-1" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>理解面向对象分析与设计的基本思想<br>理解UML建模语言基本要素及用途<br>理解业务流程建模与BPMN建模语言</p>        <h3 id="概述-1"   >          <a href="#概述-1" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>理解面向对象分析的基本思想</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291017963.png" alt="image-20211229101705801"></p><p>理解面向对象设计的基本思想</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291023992.png" alt="image-20211229102306840"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291023365.png" alt="image-20211229102318255"></p><p>理解UML建模语言基本要素及用途</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291023774.png" alt="image-20211229102345592"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291024555.png" alt="image-20211229102408373"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291024029.png" alt="image-20211229102417927"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291034176.png" alt="image-20211229103437013"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291034283.png" alt="image-20211229103457136"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035229.png" alt="image-20211229103513144"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035339.png" alt="image-20211229103524204"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035494.png" alt="image-20211229103531407"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035977.png" alt="image-20211229103537837"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035534.png" alt="image-20211229103544463"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291035417.png" alt="image-20211229103554240"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036752.png" alt="image-20211229103600687"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036977.png" alt="image-20211229103615829"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036671.png" alt="image-20211229103627584"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036269.png" alt="image-20211229103636103"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036436.png" alt="image-20211229103642354"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036390.png" alt="image-20211229103648229"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291036766.png" alt="image-20211229103653696"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037715.png" alt="image-20211229103702561"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037288.png" alt="image-20211229103710232"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037610.png" alt="image-20211229103717434"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037228.png" alt="image-20211229103728077"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037759.png" alt="image-20211229103736623"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037331.png" alt="image-20211229103742227"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291037290.png" alt="image-20211229103751173"></p><p>理解业务流程建模与BPMN建模语言</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291038136.png" alt="image-20211229103812007"></p>        <h2 id="第三章-系统规划"   >          <a href="#第三章-系统规划" class="heading-link"><i class="fas fa-link"></i></a>第三章 系统规划</h2>              <h3 id="大纲-2"   >          <a href="#大纲-2" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>理解系统规划的典型方法<br>掌握系统规划方案设计<br>掌握项目计划方法<br>掌握项目可行性分析方法</p>        <h3 id="概述-2"   >          <a href="#概述-2" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>理解系统规划的典型方法</p><p>掌握系统规划方案设计</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291513886.png" alt="image-20211229151335775" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514213.png" alt="image-20211229151408131" style="zoom: 67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514993.png" alt="image-20211229151417934" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514549.png" alt="image-20211229151425456" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514871.png" alt="image-20211229151431769" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514759.png" alt="image-20211229151438674" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291514091.png" alt="image-20211229151446033" style="zoom:67%;" /></p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211229151456672.png" alt="image-20211229151456672" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515092.png" alt="image-20211229151502951" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515155.png" alt="image-20211229151517059" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515435.png" alt="image-20211229151527343" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515174.png" alt="image-20211229151534069" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515715.png" alt="image-20211229151541609" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515581.png" alt="image-20211229151546521" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291515294.png" alt="image-20211229151555230" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291516024.png" alt="image-20211229151601967" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291516094.png" alt="image-20211229151608000" style="zoom:67%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291516314.png" alt="image-20211229151623208" style="zoom:67%;" /></p><p>掌握项目计划方法</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291644831.png" alt="image-20211229164431623" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291644169.png" alt="image-20211229164442043" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291644720.png" alt="image-20211229164451562" style="zoom: 50%;" /></p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211229211707985.png" alt="image-20211229211707985" style="zoom:50%;" /></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112292117991.png" alt="image-20211229211735856" style="zoom:50%;" /></p><p>掌握项目可行性分析方法</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291852702.png" alt="image-20211229185229540" style="zoom:50%;" /></p>        <h2 id="第四章-系统需求分析"   >          <a href="#第四章-系统需求分析" class="heading-link"><i class="fas fa-link"></i></a>第四章 系统需求分析</h2>              <h3 id="大纲-3"   >          <a href="#大纲-3" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>掌握需求采集方法与需求确定方法<br>掌握BPMN业务需求建模方法<br>掌握UML系统功能需求建模方法<br>掌握需求规格说明、需求管理方法</p>        <h3 id="概述-3"   >          <a href="#概述-3" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>掌握需求采集方法与需求确定方法</p><p>掌握BPMN业务需求建模方法</p><p>掌握UML系统功能需求建模方法</p><p>掌握需求规格说明、需求管理方法</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301314280.png" alt="image-20211230131406164"></p>        <h2 id="第五章-系统架构设计"   >          <a href="#第五章-系统架构设计" class="heading-link"><i class="fas fa-link"></i></a>第五章 系统架构设计</h2>              <h3 id="大纲-4"   >          <a href="#大纲-4" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>了解系统设计过程、设计活动、设计方法;</p><p>理解系统的架构组成、架构方法、架构设计;<br>理解基于客户机/服务器的、基于构件的、面向服务的架构技术;<br>理解非功能需求如何影响架构设计;</p><p>掌握软件架构的UML建模设计方法。</p>        <h3 id="概述-4"   >          <a href="#概述-4" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>了解系统设计过程、设计活动、设计方法;</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301339036.png" alt="image-20211230133949909"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301340327.png" alt="image-20211230134001236"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301340053.png" alt="image-20211230134010865"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301340715.png" alt="image-20211230134019538"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301404713.png" alt="image-20211230140439631"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301404529.png" alt="image-20211230140450428"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301404483.png" alt="image-20211230140459395"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301340803.png" alt="image-20211230134036662"></p><p>理解系统的架构组成、架构方法、架构设计;</p><p>理解基于客户机/服务器的、基于构件的、面向服务的架构技术;</p><p>理解非功能需求如何影响架构设计;</p><p>掌握软件架构的UML建模设计方法。</p>        <h2 id="第六章-软件建模设计与设计模式"   >          <a href="#第六章-软件建模设计与设计模式" class="heading-link"><i class="fas fa-link"></i></a>第六章 软件建模设计与设计模式</h2>              <h3 id="大纲-5"   >          <a href="#大纲-5" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>了解软件建模详细设计的目标、原则、内容;</p><p>掌握类图的高级建模设计方法;<br>掌握顺序图和通信图的高级建模设计方法;</p><p>掌握状态机图的高级建模设计方法;<br>掌握构件图、部署图、包图的高级建模设计方法;</p><p>掌握典型设计模式的设计与编程方法。</p><ul><li>设计模式概述</li><li>创建型模式</li><li>结构型模式</li><li>行为型模式</li></ul>        <h3 id="概述-5"   >          <a href="#概述-5" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      <p>了解软件建模详细设计的目标、原则、内容;</p><p>掌握类图的高级建模设计方法;<br>掌握顺序图和通信图的高级建模设计方法;</p><p>掌握状态机图的高级建模设计方法;<br>掌握构件图、部署图、包图的高级建模设计方法;</p><p>掌握典型设计模式的设计与编程方法。</p><ul><li>设计模式概述</li><li>创建型模式</li><li>结构型模式</li><li>行为型模式</li></ul>        <h2 id="第七章-用户界面设计"   >          <a href="#第七章-用户界面设计" class="heading-link"><i class="fas fa-link"></i></a>第七章 用户界面设计</h2>              <h3 id="大纲-6"   >          <a href="#大纲-6" class="heading-link"><i class="fas fa-link"></i></a>大纲</h3>      <p>了解信息系统用户界面的组成、设计原则、设计内容、设计过程<br>掌握Web系统用户界面的设计要素、建模设计方法、界面逻辑表达<br>掌握移动App用户界面的设计要素、建模设计方法、界面逻辑表达</p>        <h3 id="概述-6"   >          <a href="#概述-6" class="heading-link"><i class="fas fa-link"></i></a>概述</h3>      ]]></content>
    
    
    <summary type="html">系统分析与设计</summary>
    
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>刷面经 - 09 亚麻面经</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/20/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2009%20%E4%BA%9A%E9%BA%BB%E9%9D%A2%E7%BB%8F/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/20/%E9%9D%A2%E8%AF%95/%E5%88%B7%E9%9D%A2%E7%AD%8B%20-%2009%20%E4%BA%9A%E9%BA%BB%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-12-20T09:33:53.381Z</published>
    <updated>2021-12-23T08:09:28.494Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="刷面经-09-亚麻面经"   >          <a href="#刷面经-09-亚麻面经" class="heading-link"><i class="fas fa-link"></i></a>刷面经 - 09 亚麻面经</h1>      <span id="more"></span>        <h2 id="JD"   >          <a href="#JD" class="heading-link"><i class="fas fa-link"></i></a>JD</h2>      <p>职位：SDE实习生-提前批。请注意：申请提前批需要满足如下条件。如不符合条件，请等待22年3月投递正式批岗位。正式批工作内容和转正标准都与提前批一致。<br>· 毕业时间：23年9月之前毕业的应届毕业生<br>· 面试时间：21年12月-22年2月<br>· 入职日期：22年3月及之前<br>· 实习时间：保证一周实习4-5天全职实习，至少持续3个月<br>· 工作地点：北京朝阳区，酒仙桥路恒通商务园区，以及东四环远洋国际中心<br>· 本次提前批实习是有机会得到转正offer的！<br>·<br>· 投递须知：<br>1 填写简历申请时，请把必填和非必填项都填写完整。提交简历之后就无法修改了哦！<br>2 学校的英文全称请准确填写。<br>·<br>你想通过创新技术解决业务挑战吗?你喜欢与团队一起研究尖端的、可扩展的服务技术吗?你愿意参与可以推动行业发展的核心项目吗?<br>每位实习生都会有一位经理和一名导师专职指导工作。你将有机会接触到亚马逊的领先技术并引领关键项目的开发。你的设计，代码和智慧才学将帮助亚马逊解决复杂的技术挑战。这些挑战有可能会来自分布式系统，数据挖掘，自动化，优化和安全性等诸多领域中。<br>除了参与开发具有影响力的项目外，你还将有机会与亚马逊的资深工程师探讨和达成个人成长和职业发展，扩大你的人脉网络。在整个实习期间你将与其他实习生一起参与亚马逊内部活动。无论您身在亚马逊任何一个办公室，我们都会为你提供技术和学习方面的强大工具。<br>为了服务亚⻢逊的客户，我们正在寻找顶尖的技术人才进行创新。顾客至尚的理念使我们成为全球最受欢迎的品牌之一，这一观念已成为我们公司DNA的一部分。加入亚马逊实现个人成就和成长！</p>        <h3 id="基本任职资格"   >          <a href="#基本任职资格" class="heading-link"><i class="fas fa-link"></i></a>基本任职资格</h3>      <p>工作职责<br>· 与经验丰富的团队合作，构思，设计创新的产品和服务，将其推向市场。<br>· 在大型分布式计算环境中设计和构建创新技术，并帮助引领行业的变革。<br>· 规模化、快速地使用创新技术，在分布式系统上创建解决方案进行预测。<br>· 设计解决方案并进行编码，解决广泛的技术问题。<br>· 在敏捷环境中工作，交付高质量的软件。</p>        <h3 id="优先任职资格"   >          <a href="#优先任职资格" class="heading-link"><i class="fas fa-link"></i></a>优先任职资格</h3>      <p>基本资格<br>· 在2023年获得学士/硕士/博士学位的应届毕业生。<br>· 计算机科学，计算机工程或相关领域的本科/研究生/博士。<br>· 熟悉Java，C / C++或Python等语言。<br>· 具备计算机科学基础知识，例如面向对象设计，算法设计，数据结构和复杂性分析。<br>优先资格<br>· 有技术实习经历。<br>· 具有分布式，算法或数据库的经验。<br>· 可以有效表述技术问题并提供解决方案。<br>· 具备抽象思考的能力，善于解决复杂的问题。</p><p>如有任何问题，请邮件至：cn-tech-intern@amazon.com，邮件标题请标注“SDE提前批+姓名+学校+毕业年份”，举例SDE实习+张三+北邮+2023年</p><p>亚马逊致力于打造多元化和包容性的工作场所。亚马逊是一家机会均等的雇主，不因种族、国籍、性别、性别身份、性取向、残疾、年龄或其他受法律保护的身份而歧视。如有残疾人士需要口译员或任何现场支持，请通知我们的团队</p>        <h2 id="面经-1"   >          <a href="#面经-1" class="heading-link"><i class="fas fa-link"></i></a>面经 1</h2>      <p>内推实习，两天后约面试，背靠背两轮</p><p>第一轮： （1h）<br>简历聊了三十分钟：<br>题目merge K sorted list, 秒之，后面实现最大堆，三种操作</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">mergeKLists</span>(<span class="title">self</span>, <span class="title">lists</span>: <span class="title">List</span>[<span class="title">ListNode</span>]) -&gt; <span class="title">ListNode</span>:</span></span><br><span class="line"><span class="class">        <span class="title">dummy</span> </span>= ListNode()</span><br><span class="line">        hq = []</span><br><span class="line">        <span class="keyword">for</span> lst <span class="keyword">in</span> lists:</span><br><span class="line">            <span class="keyword">while</span> lst:</span><br><span class="line">                heapq.heappush(hq, lst.val)</span><br><span class="line">                lst = lst.next</span><br><span class="line">        p = dummy</span><br><span class="line">        <span class="keyword">while</span> hq:</span><br><span class="line">            p.next = ListNode(heapq.heappop(hq))</span><br><span class="line">            p = p.next</span><br><span class="line">        <span class="keyword">return</span> dummy.next</span><br></pre></td></tr></table></div></figure><p>第二轮：（1.5h）<br>面试官主要做机器学习的，一直在问机器学习的相关内容，因为看我的简历上机器学习比较多，不具有代表性<br>从supervised learning 的算法开始，到聚类，再到boosting算法，凸优化，深度学习也涉及到一些，这边大约问了一个小时。。<br>感觉面试官是做机器学习的，但是很多细节他也不清楚<br>问了一点点SQL，再聊了下天<br>面完后当天通知offer</p>        <h2 id="面经-2"   >          <a href="#面经-2" class="heading-link"><i class="fas fa-link"></i></a>面经 2</h2>      <p>第一轮 (1 h)：<br>上来就是一道题。不能用任何的类库，把一个字符串中的所有单词提取出来，并排序成一个链表。Eg: (I am Tom, and I am Cool) 变化成： {I, 2}-&gt;{am, 2}-&gt;{Tom, 1}-&gt;{and, 1}-&gt;{Cool, 1};<br>这道题规定时间是30分钟，但是我也没有完全写出来。<br>然后问了项目，针对数据库的Connect Pool的生产消费者模型，问了一下。 问得不深。</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">value, next</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.value = value</span><br><span class="line">    <span class="built_in">this</span>.next = next</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stance = <span class="string">&#x27;I am Tom, and I am Cool&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dict = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> dummy = <span class="keyword">new</span> Node()</span><br><span class="line"><span class="keyword">let</span> p = dummy</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> replaced = stance.replace(<span class="regexp">/,/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">replaced.split(<span class="string">&#x27; &#x27;</span>).forEach(<span class="function"><span class="params">word</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (word <span class="keyword">in</span> dict) &#123;</span><br><span class="line">    dict[word].value.time++</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> node = <span class="keyword">new</span> Node(&#123; word, <span class="attr">time</span>: <span class="number">1</span> &#125;)</span><br><span class="line">    p.next = node</span><br><span class="line">    p = p.next</span><br><span class="line">    dict[word] = node</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> nd = dummy.next; nd; nd = nd.next) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(nd.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>第二轮（1.5 h）：<br>Manager， 自我介绍，我是用英文说的。中英文都可以。 然后一道题。 M个房间，可为0或者1。如果房间的两边是一样，那么第二天，就变成1， 如果不一样就变成0；输入nums[M], int day;输出，第day天过后的nums[];<br>先brute-force, Time complexity as O(M*N)。<br>Follow up： 当N巨大的时候，如何优化。<br>答案： List存起来，然后，试图找到循环。<br>Follow up: 对M个房间的处理怎么优化。<br>答案： 位运算，具体的你查一下。<br>项目： 问的特别多，讲了4个项目，但是都没有深入问。<br>Behavior： 你的优点，缺点。最后你有什么问题问他。</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">room</span>(<span class="params">roomList, days</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (roomList.length &lt;= <span class="number">2</span>) <span class="keyword">return</span> roomList</span><br><span class="line">  <span class="keyword">const</span> res = [...roomList]</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; days; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt; roomList.length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (roomList[j - <span class="number">1</span>] === roomList[j + <span class="number">1</span>]) &#123;</span><br><span class="line">        res[j] = <span class="number">1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res[j] = <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    roomList = [...res]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(room([<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// [1, 0, 1, 0, 0, 0]</span></span><br><span class="line"><span class="comment">// [1, 1, 1, 0, 1, 0]</span></span><br><span class="line"><span class="comment">// [1, 1, 0, 1, 1, 0]</span></span><br><span class="line"><span class="comment">// [1, 0, 1, 0, 0, 0]</span></span><br></pre></td></tr></table></div></figure>        <h2 id="面经-3"   >          <a href="#面经-3" class="heading-link"><i class="fas fa-link"></i></a>面经 3</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://www.nowcoder.com/jump/super-jump/word?word=亚马逊" >亚马逊</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>一共约了2面连着，共两小时</p><p>一面：</p><p>简单问了一下基本情况，因为我主要做数据的，所以问了一下关系型数据库和非关系型数据库区别</p><p>直接做题，岛屿问题</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numIslands = <span class="function"><span class="params">grid</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> length = grid.length</span><br><span class="line">  <span class="keyword">const</span> height = grid[<span class="number">0</span>].length</span><br><span class="line">  <span class="keyword">const</span> dfs = <span class="function">(<span class="params">i, j</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      i &lt; <span class="number">0</span> ||</span><br><span class="line">      i &gt;= length ||</span><br><span class="line">      j &lt; <span class="number">0</span> ||</span><br><span class="line">      j &gt;= height ||</span><br><span class="line">      grid[i][j] === <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    grid[i][j] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    dfs(i + <span class="number">1</span>, j)</span><br><span class="line">    dfs(i, j + <span class="number">1</span>)</span><br><span class="line">    dfs(i - <span class="number">1</span>, j)</span><br><span class="line">    dfs(i, j - <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> res = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; height; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (grid[i][j] === <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">        dfs(i, j)</span><br><span class="line">        res++</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>岛屿问题的拓展：求最大岛屿面积</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[][]&#125;</span> <span class="variable">grid</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxAreaOfIsland = <span class="function"><span class="keyword">function</span>(<span class="params">grid</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">const</span> length = grid.length</span><br><span class="line">  <span class="keyword">const</span> height = grid[<span class="number">0</span>].length</span><br><span class="line">  <span class="keyword">let</span> max = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> curMax = <span class="number">0</span></span><br><span class="line">  <span class="keyword">const</span> dfs = <span class="function">(<span class="params">i, j</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      i &lt; <span class="number">0</span> ||</span><br><span class="line">      i &gt;= length ||</span><br><span class="line">      j &lt; <span class="number">0</span> ||</span><br><span class="line">      j &gt;= height ||</span><br><span class="line">      grid[i][j] === <span class="number">0</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    grid[i][j] = <span class="number">0</span></span><br><span class="line">    curMax++</span><br><span class="line">    dfs(i + <span class="number">1</span>, j)</span><br><span class="line">    dfs(i, j + <span class="number">1</span>)</span><br><span class="line">    dfs(i - <span class="number">1</span>, j)</span><br><span class="line">    dfs(i, j - <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; height; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (grid[i][j] === <span class="number">1</span>) &#123;</span><br><span class="line">        dfs(i, j)</span><br><span class="line">        max = <span class="built_in">Math</span>.max(max, curMax)</span><br><span class="line">        curMax = <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></div></figure><p>小哥哥超级温柔，也在一直帮你看代码的问题，在写代码的过程中也不断提问</p><p>二面：</p><p>项目深问</p><p>你的优势是什么，缺点是什么</p><p>你在过往经历中成长最快的一件事</p><p>你在日常生活中是如何学习的，有没有什么小窍门</p><p>java的gc机制</p><p>java的多线程</p><p>OOD：设计一个餐厅的点单服务系统，需要哪些类以及接口，如何交互</p><p>因为时间来不及，所以只说了初步的想法，没有思路实现</p><p>二面面试官总是说“好问题”，起初还以为在夸我，后来发现是他的口头禅</p>        <h2 id="面经-4"   >          <a href="#面经-4" class="heading-link"><i class="fas fa-link"></i></a>面经 4</h2>      <p>作者：liyirui<br>链接：<span class="exturl"><a class="exturl__link"   href="https://www.nowcoder.com/discuss/670416?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack" >https://www.nowcoder.com/discuss/670416?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：牛客网</p><p>一面： </p><p> 五十分钟做两道题，最后十分钟提问。 </p><ol><li>两个有序数组，求他们的中位数。（我写的O(n)的解法，介绍了一下O(logn)的方法的思路）Leetcode-4. 寻找两个正序数组的中位数 </li></ol><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums1</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums2</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findMedianSortedArrays = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, nums2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> sortedArr = [...nums1,...nums2].sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>a-b)</span><br><span class="line">    <span class="keyword">if</span>(sortedArr.length % <span class="number">2</span> === <span class="number">1</span>) <span class="keyword">return</span> sortedArr[<span class="built_in">Math</span>.floor(sortedArr.length/<span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (sortedArr[sortedArr.length/<span class="number">2</span>] + sortedArr[sortedArr.length/<span class="number">2</span>-<span class="number">1</span>]) / <span class="number">2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></div></figure><p>优化</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></div></figure><ol><li>两个用<a href="">链表</a>表示的整数，可能非常大，求他们的差的绝对值，也用<a href="">链表</a>表示。<a href="">leetcode</a>上没找到相减，这里有一道相加的。（最后剪完的前0没处理好，时间不够了）Leetcode-2. 两数相加 </li></ol><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;ListNode&#125;</span> <span class="variable">l1</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;ListNode&#125;</span> <span class="variable">l2</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;ListNode&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> dummy = <span class="keyword">new</span> ListNode()</span><br><span class="line">  <span class="keyword">let</span> carry = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> p1 = l1</span><br><span class="line">  <span class="keyword">let</span> p2 = l2</span><br><span class="line">  <span class="keyword">let</span> p = dummy</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (p1 !== <span class="literal">null</span> &amp;&amp; p2 !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sum = p1.val + p2.val + carry</span><br><span class="line">    <span class="keyword">if</span> (sum &gt;= <span class="number">10</span>) carry = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span> carry = <span class="number">0</span></span><br><span class="line">    p.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>)</span><br><span class="line">    p = p.next</span><br><span class="line">    p1 = p1.next</span><br><span class="line">    p2 = p2.next</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (p1 !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sum = p1.val + carry</span><br><span class="line">    <span class="keyword">if</span> (sum &gt;= <span class="number">10</span>) carry = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span> carry = <span class="number">0</span></span><br><span class="line">    p.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>)</span><br><span class="line">    p = p.next</span><br><span class="line">    p1 = p1.next</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (p2 !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sum = p2.val + carry</span><br><span class="line">    <span class="keyword">if</span> (sum &gt;= <span class="number">10</span>) carry = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span> carry = <span class="number">0</span></span><br><span class="line">    p.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>)</span><br><span class="line">    p = p.next</span><br><span class="line">    p2 = p2.next</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (carry === <span class="number">1</span>) &#123;</span><br><span class="line">    p.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> dummy.next</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>三数之和</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dfs = <span class="function">(<span class="params">list, count, path = [], allPaths = []</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (path.reduce(<span class="function">(<span class="params">pre, cur</span>) =&gt;</span> pre + cur) === <span class="number">0</span>) &#123;</span><br><span class="line">      allPaths.push([...path])</span><br><span class="line">    &#125;</span><br><span class="line">    path = []</span><br><span class="line">  &#125;</span><br><span class="line">  list.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    path.push(item)</span><br><span class="line">    dfs(list.slice(index + <span class="number">1</span>), count - <span class="number">1</span>, path, allPaths)</span><br><span class="line">    path.pop()</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> allPaths</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> threeSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> allPaths = dfs(nums, <span class="number">3</span>).map(<span class="function"><span class="params">arr</span> =&gt;</span> arr.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b))</span><br><span class="line">  <span class="keyword">const</span> memo = &#123;&#125;</span><br><span class="line">  <span class="keyword">return</span> allPaths.reduce(<span class="function">(<span class="params">pre, cur</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> key = <span class="built_in">JSON</span>.stringify(cur)</span><br><span class="line">    <span class="keyword">if</span> (cur <span class="keyword">in</span> memo) &#123;</span><br><span class="line">      <span class="keyword">return</span> pre</span><br><span class="line">    &#125;</span><br><span class="line">    memo[cur] = <span class="number">0</span></span><br><span class="line">    pre.push(cur)</span><br><span class="line">    <span class="keyword">return</span> pre</span><br><span class="line">  &#125;, [])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(threeSum([-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, -<span class="number">1</span>, -<span class="number">4</span>]))</span><br></pre></td></tr></table></div></figure><p>二面： </p><p>聊了一下项目，问了几个基础题 </p><p>函数传入两个参数，一个是int类型，一个是一个类的对象。请问在函数执行完以后传入的int值是否会改变，对象的属性是否会改变。 </p><p>讲一下单例模式。 </p><p>讲一下抖音、<a href="">快手</a>用到的推荐<a href="">算法</a>。 </p><p>讲一下如何对视频按照内容或者质量进行分类。 </p><p><a href="">算法题</a>，不要求写代码，只要求说思路：在一条无穷长的直线上放两个机器人，机器人只有四种行为，向左、向右、插旗子、查看当前位置是否有旗。两个机器人受同一条程序控制。问，该程序如何书写才能够让两个机器人面对面相遇。 </p><blockquote><p> 我的思路： </p><ol><li>每秒向右走一步，走一步插一个旗子。执行步骤2。 </li><li>判断地上是否有旗子，如果没有旗子，执行步骤1；如果有旗子，执行步骤3。 </li><li>每秒向右走N步（N &gt;= 2）。执行步骤4 </li><li>判断地上是否有旗子，如果没有旗子，执行步骤5；如果有旗子，执行步骤3。 </li><li>说明此时已经超过了之前位于它前面的机器人，此时向左回头或者停下来都可以。被超过的机器人几步以后会赶上来。</li></ol></blockquote>        <h2 id="面试-5"   >          <a href="#面试-5" class="heading-link"><i class="fas fa-link"></i></a>面试 5</h2>      <p>一面三道题 最后一道题是个hard </p><p>每次题目不一样所以也没有太多参考价值，看看就行</p><p>第一题 合并k个有序<a href="">链表</a></p><p>第二题 1 对应 A 26 对应 Z 转换数字</p><p>第三题 3的个数</p><p>二面我的网一直不太好，断断续续，最后说直接做题吧这样影响比较小，逆序对的个数 </p><p>没有八股文比较清爽，面试官人也不错，总之虽然我很菜但是体验还不错，类似<a href="">海底捞</a>的面试服务。   </p><p>哈哈哈，我好歹也是面过国际大厂的人了</p>        <h2 id="面试-6"   >          <a href="#面试-6" class="heading-link"><i class="fas fa-link"></i></a>面试 6</h2>      <p>投的SDE，一二面一起。看了为数不多的几篇<a href="">亚马逊</a>中国<a href="">面经</a>，面试难度个人感觉真是看组。<br> 一面:<br> 问项目，<br> 全排列，<br> 二叉搜索树转双向<a href="">链表</a>，<br> 层次遍历<br> 二面:<br> 问项目里数据库的设计，项目难点<br> mybatis那些，答的不好，用的太浅<br> 写LRU<br> 准备了很多八股文，国内互联网会问很多源码和底层的设计思想，面了后一直被养鱼。而<a href="">亚马逊</a>这基本都是原题，<a href="">微软</a>还会再改编一些，难度对没有JAVA项目的实习生很友好了。<br> 五月了，面了一个多月真的心态崩了，进去了好好学习查漏补缺了_(:з」∠)</p>        <h2 id="面试-7"   >          <a href="#面试-7" class="heading-link"><i class="fas fa-link"></i></a>面试 7</h2>      <p>作者：这谁能不哭呢<br>链接：<span class="exturl"><a class="exturl__link"   href="https://www.nowcoder.com/discuss/658372?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack" >https://www.nowcoder.com/discuss/658372?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：牛客网</p><p><a href="">亚马逊</a>的研发岗位叫做SDE，我面试的就是这个岗位。  </p><p> 一面： </p><p> 1 多线程的通信，同步方式。面试官问我 volatile 和 synchronized 的区别。 我从底层原理方面讲了两者的实现方式，主要解释了 synchronized 基于 mutex lock 实现，重 量级锁，需要从用户态切换到内核态。volatile 则是通过插入内存屏障的方式，保证变量读 写的可见性。  </p><p> 2 集合类用过哪些 当时回答的是 ArrayList，linkedlist，hashmap 这类简单的集合类，于是面试官就问了 hashmap 的实现原理，以及和 chm 的比较，不同版本 JDK 的区别。也是比较老生常谈的问题了。  </p><p> 3 JVM 的内存模型 说完内存模型的主要情况，面试官开始问我关于内存泄漏和内存溢出相关的问题，也比较简 单，另外还问了 GC 相关的问题。  </p><p> 4 NIO 和 BIO 的区别 主要就是讲述 BIO 的阻塞式 IO 读写，然后讲一下 NIO 的实现原理，相关类，并且说到 IO 多 路复用的实现方式，底层的 epoll 实现方式等等。 </p><p> 5 <a href="">算法题</a>：实现一个 LRU 只要求实现超过容量时的缓存淘汰，不用处理缓存超时的问题，所以只要写一个双向<a href="">链表</a>来 存节点即可。另外，不能直接使用 linkedhashmap 实现，所以直接用 hashmap 作为成员变量， 另外写一个含有容量参数的构造方法即可，也是比较常见的问题了。  </p><p> 6 n 个有序<a href="">链表</a>合并，怎么实现。 刚开始说的是直接合并，然后优化使用多机进行。后来看了一下，可以用最小堆实现。  </p><p> 二面： </p><p> 这轮是经理面 </p><p> 1 项目  </p><p> 2 项目的多线程问题  </p><p> 3 项目的架构  </p><p> 4 项目的数据库使用，部署方式，缓存部署方式。  </p><p> 5 项目的实际场景  </p><p> 6 讲一下 JVM 的内存分区  </p><p> 7 秒杀系统架构设计 秒杀系统设计也是一个比较常见的问题了。一般可以分几个方面作答。 首先，前端限制访问时间，以及同一 IP 的访问次数。 然后，第一层的服务做负载均衡，比如使用 nginx，然后服务器做集群。 接着，可以用消息队列做削峰和限流，然后做一层缓存，最后只有少量请求到达数据库。 面试官问 nginx 怎么做高可用，前一层能不能再做负载均衡，我回答的是 nginx 也做集群， 前一层可以用硬件负载均衡或者 dns 服务器做第一层负载均衡。 另外面试官还问了如果有 ddos 攻击怎么办，我刚好想到通过人机验证来避免大量肉鸡的攻 击，于是就说了验证码的方式，面试官也说可以。  </p><p> 8 Redis 的分布式部署 说了 Redis cluster 的部署方式，其实就是分片加哨兵的部署方式，另外 Redis 还可以使用 codis 这类<em>*</em>来做分布式。 </p><p>  9 MySQL 的主从部署，读写分离。 这个就是比较常见的 MySQL 部署方案了，稍微说了一下实现方式就没再问了。  </p><p> 10 cap 定理 讲了一下为什么三者只能选两者，这个问题还是挺绕的。 </p><p>11 负载均衡怎么做  </p><p> 12 kafka 的作用，持久化，其他问题 kafka 之前看了一些比较好的文章，但是时间一久就忘了，于是我就说了读写性能好，以及 多个副本的部署方式。  </p><p> 13 前端解决一些无效的请求过滤，怎么做  </p><p> 14 有什么 offer，为什么想要换工作，工作不注重稳定性吗？想去哪里工作。</p>        <h2 id="面试-8"   >          <a href="#面试-8" class="heading-link"><i class="fas fa-link"></i></a>面试 8</h2>      <p>作者：狗傻</p><p>  <strong>一面 1h</strong> </p><ol><li>面试官自我介绍并且简单介绍了部门的情况。 </li><li>中文自我介绍，所学专业是做什么的，通俗地讲解一下。 </li><li>实习的项目和用到的<a href="">算法</a>。 </li><li><a href="">算法题</a>：套了个电商背景的次模优化问题。大意是有一个必须购买的商品集合，商城搞大促，一些商品捆绑<a href="">销售</a>。要求用最少的钱去购买一些捆绑商品，使得能够覆盖必买商品。举个例子，比如必须购买的物品列表为{A,B}。{A,C}捆绑<a href="">销售</a>，售价为10，{B,C}捆绑<a href="">销售</a>，售价为10，{A,B}捆绑<a href="">销售</a>，售价为30。那么最少花费20，购买{A,C},{B,C}可以覆盖{A,B}。实习的时候有一部分工作是研究类似的问题，虽然约束和优化目标有所区别。拿到题目先是和面试官确认了一下题意（英文题目，中文交流，那个在线白板只能打英文和数字），试探了数据规模，明确函数接口以及返回值。 </li><li><p>反问环节：部门具体业务、技术栈、招人偏好。 </p><p><strong>二面 1h</strong>  </p></li><li><p>面试官自我介绍。 </p></li><li>中文自我介绍，挑一个项目讲一下。</li><li><a href="">算法题</a>：Leetcode上一道非常经典的hard题copy books（这道题没做过的小伙伴强烈建议看一下）。我先扭捏了一下，说了一个二维dp的做法，面试官说复杂度不够好，你再优化优化，提示了答案有单调性。然后我就不装了，写了个二分答案转判定的做法。 </li><li><p>反问环节：公司的新人培训、transfer的难度和流程、面试官从国内互联网跳到<a href="">亚马逊</a>的感受。 </p><p>两轮面试其实运气更重要一些，大家可能题都做出来了，剩下的选拔和<a href="">排序</a>的机制如何并不清楚。如果面试官人力足够的情况下，多一些轮次可能会更好一些。 </p><p>现在面试都会有手撕代码环节，个人觉得手撕环节是自己比较擅长的。虽然<a href="">春招</a>和秋招面试过程中，碰到难题的次数很少，但是不论什么类型的题，都会和面试官再三确认题意和函数接口，在确认题意的过程中，会问一些数据规模方面的问题。数据规模一般会和最优解的时间复杂度相关。在有思路之后，会先和面试官交流一下，看自己的做法是否满足要求，比如原地、时间、空间。写完之后会先检查一下，边界判断突出出来，像<a href="">动态规划</a>的状态数组和状态转移方程会写中文注释并尽可能详细的通过语言描述清楚。 </p></li></ol><p>  这是我秋招第一家谈薪的公司，听hr小哥介绍工资package组成和福利的时候，感慨自己竟然也能卖出个价钱，猛虎落泪。算了下时薪还是很香的，外企的SDE岗位更像是全栈工程师，对于非科班的我挑战比较大。hr小哥给了一个ddl，让那之前给出答复，如果拒了的话会继续捞后面的小伙伴。 </p><p>  希望之后的公司谈薪也能芝麻开花节节高，也希望牛友们都能最终拿到自己满意的offer并且顺利毕业。</p>        <h2 id="面经-9"   >          <a href="#面经-9" class="heading-link"><i class="fas fa-link"></i></a>面经 9</h2>      <p>一面<br>由于前一天差点在香港狭窄而混乱的街道迷路，我6点半就起来了，8点坐地铁就到了洲际酒店，到了后发现我是第一个到现场的。达到后我问大厅经理是否知道amazon onsite interviews这个event，他回答知道，而且知道在11层，我抖了个机灵，先上去了熟悉了下场地。这次面试的一共8人，每人一个海景房，面试官流动来面试。</p><p>一面面试官是位白人，感觉30岁出头的样子，很nice的一个人，有意放慢英语语速，让我听的清楚，能够照顾到面试者的反应，让人尽量relax<br>先问的leadership问题：有没有一件事让你做innovation的方法，不走寻常路？ 我用了网易圈圈的企业余额异步更新的例子。<br>然后是编程题目：<br>familly tree，其实是类似一颗家族树，每个节点上层是2个节点，一个parent节点，一个mother节点，类似例子如下：</p><p>因为刚开始连不上wifi，所以我申请了白板编程，<br>关键点：</p><p>ask clalification questions 我问了有多少generation，面试官说这是好问题，题目描述是从1590年开始，算300年，30年一代，那就是10代，所以sacalability可以暂时考虑10代，这样我心里就有底了<br>我计算出了，每代数量的增长是2的n次方<br>node的结构如下，这个是面试官定义的，我觉得的他的编码习惯很好，因为他是用接口定义，避免了实现的细节，向他学习<br>我给出2个方法，一个是循环的实现，一个是递归的实现，我选择了循环实现，循环的关键是怎么从这一代推到下一代（到这里时，面试官说，we almost there），我用了一个先进先出的队列。实现完成后，我主动指出时间和空间复杂度。<br>这些年下来的经验，面试首战要必胜，一是对内推的同事有个交代，二是给自己信心。</p><p>二面<br>主面试官一个是黑人，30出头的样子，看着比较年轻，自我介绍是负责customer service部分的，另外是一个女的，有着亚洲长相，但是是英语native speaker，只负责纪录，没发言，所以我对她没什么印象<br>这轮的leadership问题比较多，问了不只一个，比如讲到没有足够数据怎么办？<br>我反馈：<br>1.用搜索引擎搜索，比如百度指数（幸亏最近订了极客时间的从0开始学增长的课程，获得了很多实战技能）<br>2.行业报告<br>3.直觉<br>我以圈圈的用户增长为例，说了直觉的作用，我们定位在学校的大学生，他们有大把时间，而且愿意分享信息，所以刚开始用户有增长，<br>于是他追问（此处省略若干问题细节）<br>这轮的编码是一个带业务背景的类似二分查找的题，这次我选择直接在笔记本上做。</p><p>三面<br>第三轮是系统设计面试，是一个白人，年纪看着有40岁了（或者老外显老），有点谢顶了：）<br>系统设计题目：<br>Amazon员工每天登录工作系统时，会弹出一个问题，比如最近的compliance问题，公司制度，或者比较generic的问题，这些问题需要得到反馈，就是要搞一个rating的系统，给予这个问题1-5分的总结反馈</p><p>我的反馈：</p><p>弄清楚需求：</p><p>amazon又多少员工使用这个系统 1M<br>问题数又多少<br>每天被rating的数量又多少（对方回答一天一次，那么是1M）<br>但是最重要的是，有rash hour，因为北美员工数量多，时区也差不多，可能一下子就是10万级别的人登录进来<br>Overall design（abstract design）概要设计</p><p>record module<br>report module<br>然后我做了读写分离，而且对rush hour特别定了MQ 队列，对方很感兴趣，问为什么 回答：smooth the peak 削峰填谷</p><p>四面<br>四面是个senior，看上去快50岁了。（国内说的35岁天花板好像在国外并不存在？），从技术交谈上看也是非常专业的人。<br>从事后收到的Amazon拒信分析看，应该是这一面我出了状况（但注意其不会透露具体细节），一是不习惯高强度的集中面试，且全英文交流，已经出现疲劳的感觉，思维没有之前活跃。二是这题中涉及数学相关的知识，说实在我数学不太好，youtube上看面经，我记得有大神也是挂在这个上面。所以面大厂，要让自己方方面面的基础更扎实些。</p>        <h2 id="面经-10"   >          <a href="#面经-10" class="heading-link"><i class="fas fa-link"></i></a>面经 10</h2>      <p>5.15</p><p>amazon </p><p>1.项目</p><p>2.用一个数组实现最大栈</p><p>项目</p><p>1.全排列“123”-》123/132/213/231/312/321</p><p>2.把最后的K个链表结点放到前面去</p><p>1-2-3-4-5 2</p><p>4-5-1-2-3</p>        <h2 id="面经-11"   >          <a href="#面经-11" class="heading-link"><i class="fas fa-link"></i></a>面经 11</h2>      <p>Amazon SDE 面经（共两面，邮件联系，HR 后来加了微信，两场面试一起约，面完第一个立即面第二个）：. 1point3acres<br>一面：Amazon Chime 会议面试。自我介绍，然后问了个树相关的算法题，给 link 然后在线写（但不运行，只看）。递归写出来以后面试官貌似自己看了挺长时间然后说觉得没问题，然后也没让我改迭代（我：？？？）然后之后就是提问面试官，问了些他们平时工作的业务。<br>二面：Amazon Chime 会议面试。自我介绍，两个算法题。第一个 Leetcode medium 原题，装出一副苦思冥想然后再想到办法优化的样子。第二个有点 tricky，递归相关，但是想了半天没搞太清楚怎么写，写了好几种都因为理解错题意不对，说了下思路，面试官觉得思路差不多。<br>整体感觉：Amazon 的算法题更难一点，但是感觉 Amazon 的考察貌似只有算法题，没其他基础知识的问题。同时觉得腾讯的面试官听起来更加 geek 一点。</p>        <h2 id="面经-12"   >          <a href="#面经-12" class="heading-link"><i class="fas fa-link"></i></a>面经 12</h2>      <p>北京亚马逊 供应链组一面coding：<br>lc 3<br>lc 322<br>lc 16<br>秒了之后 直接进入两轮vo阶段，结果全程没开摄像头<br>第一轮vo：<br>lc 129 和一个库存数据库设计 不难<br>第二轮vo：<br>lc 273改版 从英文变成拼音，中间零的问题，想了一段时间，最后写出答案<br>hr一天之后反馈，面试官觉得所有都挺好，就是coding style不符不能录取。只想知道两个coding题怎么看出coding style有问题。。。</p>        <h2 id="面经-13"   >          <a href="#面经-13" class="heading-link"><i class="fas fa-link"></i></a>面经 13</h2>      <p>1.在一个int array 里找repeat number。array size 1 million， 包含从1 到 1 million的值，其中只会有一个repeat。找到这个值。 不知道这题利口上有么有，不过这个题是我在之前公司，经常用来面试别人的题，所以没什么难度。<br>2.应该是地里出现过或者很类似的。 给定earth 的坐标（可以假设为0， 0）， 和 1 million 其他star 的坐标， 找到最近的k个star。 没记错的话利口肯定有类似的题，只不过size不一定是1million。有知道的同学麻烦告诉下。<br>因为是早上8点电面，然后我就直接去公司上班了。 大概12点左右就接到onsite邀请了<br>onsite。 每一轮都有bh，最少一个。<br>1.先聊做的project。然后bh。coding时候应该只有大概15到20分钟。 一个组词的游戏（那个游戏名叫什么没听懂），给一个4x4的grid， filled with letters。 找出可以组成的所有word。规则8 个方向都可以， 但是不能重复使用已经用过的positon（注意是position 不是value）另外是给了一个dictionary的api， 比如叫 boolean isWord（char[]）。<br>举个例子：<br>             a, b, c, d<br>             d, p, p, l<br>            m, p, n, e<br>            e, f, g, h<br>假设dictonary里 只有app， 和apple是word。 可以通过（0，0）（1，1）（2，1） 组成app 但是不能用（0，0） （1，1）， （1，1)<br>直接用dfs解的。</p><ol><li>同样聊bh， 然后一个design， vallet parking system。 应该是最简单的design了吧。而且那个小姐姐貌似也只关心data model 和work flow</li><li>纯 bh。这轮应该是发挥最好的一轮 XD。</li><li>bh, coding： subnet array [128.0.0.1/8, 128.0.0.1/16, 128.0.0.1/24, 128.0.0.1/32] , 以及 一个address， 判断这个address 是不是match array 中某一个subnet return true or false<br>楼主之前没有sub’net 的经验， 所以搞了好久才弄明白规则。 会尽力解释一下。 match的规则就是 那个/后边的数字</li></ol>        <h2 id="面经-14"   >          <a href="#面经-14" class="heading-link"><i class="fas fa-link"></i></a>面经 14</h2>      <p>作者：牛客905040676号<br>链接：<span class="exturl"><a class="exturl__link"   href="https://www.nowcoder.com/discuss/648511?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack" >https://www.nowcoder.com/discuss/648511?type=post&amp;order=recall&amp;pos=&amp;page=1&amp;ncTraceId=&amp;channel=-1&amp;source_id=search_post_nctrack</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>来源：牛客网</p><p>Spring生命周期：没有背熟导致被回答的不好 </p><p> Spring事物原理：不清楚 </p><p> MySQL事物原理：undolog </p><p> 项目问题：支付幂等性悲观锁金额乐观锁 </p><p> 线程池：回答了参数和原理 </p><p> Qps如果需要大幅提高怎么半：横向扩展，纵向扩展，缓存，消息队列，数据库级群，数据库连接池多个方面回答 </p><p> Jvm问题优化：想回答八股文被打断，说问的是实际使用怎么优化，打到了关于fullgc，空间分配，碎片空间以及垃圾回收器选择 </p><p> 如何解决<a href="">redis</a>穿透问题：<a href="">redis</a>缓存空值，布隆过滤器 </p><p> 布隆过滤器如解决删除问题：将0，1改为0，n </p><p> 如果<a href="">redis</a>极热点<a href="">redis</a>缓存失效大量打到数据库中就会造成奔溃怎么半？ </p><p> 后台设置线程将数据库热点恢复到<a href="">redis</a>上，这期间调用分布式锁，只有获得锁的才能访问数据库，造成短时间等待防止数据库不可用 </p><p> <a href="">算法题</a>：最长无重复子串 </p><p>  场景题：设计秒杀系统 </p><p>  答了：静态资源，负载均衡，分布式，<a href="">redis</a>缓存级群搭建，rocketMQ异步，mysql主从分离，分库分表 </p><p>  云平台使用以及背后原理：基本不会，许多概念都没有明白 </p><p>  防止超卖：落单减库存，失败再加回去 </p><p> 收到消息，确定凉了</p>        <h2 id="面经-15"   >          <a href="#面经-15" class="heading-link"><i class="fas fa-link"></i></a>面经 15</h2>      <p>之前担心实习被取消投的国内亚麻，国内上周五面的，两轮背靠背各一小时，感觉都不是很常规<br>第一轮：</p><ol><li>求全球ipv6的密度？？？上来就懵逼了，其实就是ipv6的总个数除以地球表面积，不知道具体值的话要自己估算，说是考察解决问题的思路？？？</li><li>记不太清了，大概给了两个表<br>Person (id, name, status)<br>Event (id, status, date)<br>status 只有 (born, go to school, marry, go to work, dead)这几个状态<br>让设计数据结构并写个程序找出当前已死亡并且30岁之前结婚的人的名字<br>follow up：考虑一个人多次结婚的情况<br>最后说了说思路也没写完…<br>第二轮：<br>先问了问java基础知识，ArrayList linkedlist区别、hashmap除了链表如何解决hash冲突什么的，比较简单但是也答得不太好<br>然后开始问thread process区别，线程内存模型什么的记不太清了，没答上来<br>然后做题：</li><li>类似permutation，只不过是字母版本-baidu 1point3acres</li><li>一个rectangle面积在range(n, n + 3)中，给定n，求长宽差的绝对值最小时的矩形，给了O(sqrt(n))的解法，面试官说不是最优解，也不知道怎么优化了…<br>面完两轮感觉自己面的稀烂，毕竟转专业，连ipv6是多少位都不记得了，没想到居然还能过，感谢大水校的名气加成…</li></ol>        <h2 id="面经-16"   >          <a href="#面经-16" class="heading-link"><i class="fas fa-link"></i></a>面经 16</h2>      <p>刚刚参加完Amazon的面试，来写一下自己的面试过程。我申请的是SDE-1的职位。面试流程是2轮电面，4轮Onsite.</p><p>一开始是电面。</p><p>第一轮 电面 1<br>翻转字符串 reverse words in a string。<br>LintCode原题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/en/problem/reverse-words-in-a-string/" >http://www.lintcode.com/en/problem/reverse-words-in-a-string/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/reverse-words-in-a-string/" >http://www.jiuzhang.com/solutions/reverse-words-in-a-string/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>follow-up: 翻转的时候如何处理空格<br>划分数组。<br>LintCode原题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/partition-array/" >http://www.lintcode.com/zh-cn/problem/partition-array/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/partition-array/" >http://www.jiuzhang.com/solutions/partition-array/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>第二轮 电面2<br>链表求和。要求O（n）的时间复杂度。<br>LintCode原题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/add-two-numbers/" >http://www.lintcode.com/zh-cn/problem/add-two-numbers/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/reverse-words-in-a-string/" >http://www.jiuzhang.com/solutions/reverse-words-in-a-string/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>Find all ancestors of LCA. 给出两个节点，打印出两个节点的所有公共祖先节点，算法也就是找出最近公共祖先（LCA），然后打印root到LCA的所有节点。<br>LintCode原题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/lowest-common-ancestor/" >http://www.lintcode.com/zh-cn/problem/lowest-common-ancestor/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/lowest-common-ancestor/" >http://www.jiuzhang.com/solutions/lowest-common-ancestor/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>follow-up: 问了一些关于堆和宽度优先搜索（heap &amp; BST）的知识点。像是什么时候用宽度优先搜索，这个在《九章算法班》有讲。<br>电面结束后几天，HR告诉我面试通过了，并安排我去参加Onsite.</p><p>第三轮 Onsite 1<br>面试官先是问了我一些简历上的问题，比如我简历上的项目经验，问的还算比较细。</p><p>接着问了1道算法题。</p><p>一道链表求和的题。假定用一个链表表示两个数，其中每个节点仅包含一个数字。假设这两个数的数字顺序排列，请设计一种方法将两个数相加，并将其结果表现为链表的形式。 要求不可以改变链表的顺序<br>第四轮 Onsite 2<br>面试官先问了我为什么想来amazon，接着问了我一些以前的实习经验。<br>然后问了两道算法题。</p><p>Find smallest range containing elements from k lists<br>LintCode 近似题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/longest-substring-with-at-most-k-distinct-characters/" >http://www.lintcode.com/zh-cn/problem/longest-substring-with-at-most-k-distinct-characters/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>LintCode 近似题参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/longest-substring-with-at-most-k-distinct-characters/" >http://www.jiuzhang.com/solutions/longest-substring-with-at-most-k-distinct-characters/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>在一个文件中，找出所有的Anagram<br>第五轮 Onsite 3<br>这一轮纯粹是写代码。</p><p>Ftinding max and 2nd max in an array by minimum times.<br>实现一个类似于并查集的数据结构，可以合并一些点的集合，并且查询点所在集合的点个数等等<br>第六轮 Onsite 4<br>问了两道算法题，都要求分享时间复杂度了。</p><p>题目不是记得很清楚了。是一道排序的题目。跟Lintcode这道题目有点像:在数组中的两个数字如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。给你一个数组，求出这个数组中逆序对的总数。<br>LintCode 题目地址：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/reverse-pairs/。" >http://www.lintcode.com/zh-cn/problem/reverse-pairs/。</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>相似问题的参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhangcom/solutions/reverse-pairs/" >http://www.jiuzhangcom/solutions/reverse-pairs/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><ol><li>是一道数据结构的问题。类似于设计一个LRU。</li><li>LintCode 相似问题：<span class="exturl"><a class="exturl__link"   href="http://www.lintcode.com/zh-cn/problem/lru-cache/" >http://www.lintcode.com/zh-cn/problem/lru-cache/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li>LintCode 相似问题的参考答案：<span class="exturl"><a class="exturl__link"   href="http://www.jiuzhang.com/solutions/lru-cache/" >http://www.jiuzhang.com/solutions/lru-cache/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol><p>————————————————<br>版权声明：本文为CSDN博主「sunenglish1230」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/sunenglish1230/article/details/72678117" >https://blog.csdn.net/sunenglish1230/article/details/72678117</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="面经-17"   >          <a href="#面经-17" class="heading-link"><i class="fas fa-link"></i></a>面经 17</h2>      ]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="刷面经" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%B7%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/18/%E7%AE%97%E6%B3%95/playgroud/tsconfig/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/18/%E7%AE%97%E6%B3%95/playgroud/tsconfig/</id>
    <published>2021-12-18T10:58:02.296Z</published>
    <updated>2021-12-18T10:58:40.675Z</updated>
    
    <content type="html"><![CDATA[{"compilerOptions":{"outDir":"./built","allowJs":true,"target":"es5"},"include":["./2.ts"]}]]></content>
    
    
      
      
    <summary type="html">{&quot;compilerOptions&quot;:{&quot;outDir&quot;:&quot;./built&quot;,&quot;allowJs&quot;:true,&quot;target&quot;:&quot;es5&quot;},&quot;include&quot;:[&quot;./2.ts&quot;]}</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>实习经历 - 深圳腾讯CSIG腾讯云</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/16/%E5%AE%9E%E4%B9%A0%E7%BB%8F%E5%8E%86%20-%20%E6%B7%B1%E5%9C%B3%E8%85%BE%E8%AE%AFCSIG%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/16/%E5%AE%9E%E4%B9%A0%E7%BB%8F%E5%8E%86%20-%20%E6%B7%B1%E5%9C%B3%E8%85%BE%E8%AE%AFCSIG%E8%85%BE%E8%AE%AF%E4%BA%91/</id>
    <published>2021-12-15T16:02:51.313Z</published>
    <updated>2021-12-15T16:09:08.764Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="实习经历-深圳腾讯CSIG腾讯云"   >          <a href="#实习经历-深圳腾讯CSIG腾讯云" class="heading-link"><i class="fas fa-link"></i></a>实习经历 - 深圳腾讯CSIG腾讯云</h1>      <span id="more"></span><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160007957.jpg" alt="0 (6)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160007393.jpg" alt="0 (5)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160007904.jpg" alt="0 (1)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160008595.jpg" alt="0 (4)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160007832.jpg" alt="0 (3)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160008818.jpg" alt="0 (9)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160009636.jpg" alt="0 (10)"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160004998.jpg" alt="TCA"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112160008242.jpeg" alt="Practitioner"></p>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>项目展示 - Springboot 选课系统</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20Springboot%20%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20Springboot%20%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-12-15T12:24:38.189Z</published>
    <updated>2022-02-04T16:45:16.899Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="项目展示-Springboot-选课系统"   >          <a href="#项目展示-Springboot-选课系统" class="heading-link"><i class="fas fa-link"></i></a>项目展示 - Springboot 选课系统</h1>      <span id="more"></span><p>采用 RESTFULL 风格 API 设计，使用spring boot + spring data jpa </p><p>下面是接口功能和用户使用流程</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202202050045944.png" alt="image-20220205004511818"></p><ol><li>查询用户</li></ol><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202202050039879.jpg" alt="img"></p><p> <img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202202050039881.jpg" alt="img"></p><p> 欢迎页</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202202050040164.png" alt="img"></p>        <h3 id="课程信息查看"   >          <a href="#课程信息查看" class="heading-link"><i class="fas fa-link"></i></a>课程信息查看</h3>      <p><img src="C:/Users/15727/AppData/Local/Temp/msohtmlclip1/01/clip_image004.png" alt="img"></p>        <h3 id="教师确认课程"   >          <a href="#教师确认课程" class="heading-link"><i class="fas fa-link"></i></a>教师确认课程</h3>      <p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202202050040176.png" alt="img"></p>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>标题</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20Go%20%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20Go%20%E9%80%A0%E8%BD%AE%E5%AD%90/</id>
    <published>2021-12-15T12:24:14.892Z</published>
    <updated>2021-09-05T02:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>#</p><span id="more"></span>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>项目展示 - 基于 Grad-CAM 的 CNN 可视化</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20%E5%9F%BA%E4%BA%8E%20Grad-CAM%20%E7%9A%84%20CNN%20%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/15/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA%20-%20%E5%9F%BA%E4%BA%8E%20Grad-CAM%20%E7%9A%84%20CNN%20%E5%8F%AF%E8%A7%86%E5%8C%96/</id>
    <published>2021-12-15T12:23:41.429Z</published>
    <updated>2021-12-15T13:06:46.961Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="项目展示-基于-Grad-CAM-的-CNN-可视化"   >          <a href="#项目展示-基于-Grad-CAM-的-CNN-可视化" class="heading-link"><i class="fas fa-link"></i></a>项目展示 - 基于 Grad-CAM 的 CNN 可视化</h1>      <span id="more"></span><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112152057322.png" alt="image-20211215205755200"></p><p>效果图：</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112152055417.jpg" alt="gradcam"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112152055485.jpg" alt="guided_gradcam"></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.keras.applications.vgg16 <span class="keyword">import</span> (</span><br><span class="line">    VGG16, preprocess_input, decode_predictions)</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span> Lambda</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.framework <span class="keyword">import</span> ops</span><br><span class="line"><span class="keyword">import</span> tensorflow.keras.backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> Model</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">target_category_loss</span>(<span class="params">x, category_index, nb_classes</span>):</span></span><br><span class="line">    <span class="keyword">return</span> tf.multiply(x, K.one_hot([category_index], nb_classes))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">target_category_loss_output_shape</span>(<span class="params">input_shape</span>):</span></span><br><span class="line">    <span class="keyword">return</span> input_shape</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normalize</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="comment"># utility function to normalize a tensor by its L2 norm</span></span><br><span class="line">    <span class="keyword">return</span> x / (K.sqrt(K.mean(K.square(x))) + <span class="number">1e-5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_image</span>(<span class="params">path</span>):</span></span><br><span class="line">    img_path = sys.argv[<span class="number">1</span>]</span><br><span class="line">    img = image.load_img(img_path, target_size=(<span class="number">224</span>, <span class="number">224</span>))</span><br><span class="line">    x = image.img_to_array(img)</span><br><span class="line">    x = np.expand_dims(x, axis=<span class="number">0</span>)</span><br><span class="line">    x = preprocess_input(x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register_gradient</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;GuidedBackProp&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> ops._gradient_registry._registry:</span><br><span class="line"><span class="meta">        @ops.RegisterGradient(<span class="params"><span class="string">&quot;GuidedBackProp&quot;</span></span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_GuidedBackProp</span>(<span class="params">op, grad</span>):</span></span><br><span class="line">            dtype = op.inputs[<span class="number">0</span>].dtype</span><br><span class="line">            <span class="keyword">return</span> grad * tf.cast(grad &gt; <span class="number">0.</span>, dtype) * \</span><br><span class="line">                   tf.cast(op.inputs[<span class="number">0</span>] &gt; <span class="number">0.</span>, dtype)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compile_saliency_function</span>(<span class="params">model, activation_layer=<span class="string">&#x27;block5_conv3&#x27;</span></span>):</span></span><br><span class="line">    input_img = model.<span class="built_in">input</span></span><br><span class="line">    layer_dict = <span class="built_in">dict</span>([(layer.name, layer) <span class="keyword">for</span> layer <span class="keyword">in</span> model.layers[<span class="number">1</span>:]])</span><br><span class="line">    layer_output = layer_dict[activation_layer].output</span><br><span class="line">    max_output = K.<span class="built_in">max</span>(layer_output, axis=<span class="number">3</span>)</span><br><span class="line">    saliency = K.gradients(K.<span class="built_in">sum</span>(max_output), input_img)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> K.function([input_img, K.learning_phase()], [saliency])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modify_backprop</span>(<span class="params">model, name</span>):</span></span><br><span class="line">    g =  tf.compat.v1.get_default_graph()</span><br><span class="line">    <span class="keyword">with</span> g.gradient_override_map(&#123;<span class="string">&#x27;Relu&#x27;</span>: name&#125;):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get layers that have an activation</span></span><br><span class="line">        layer_dict = [layer <span class="keyword">for</span> layer <span class="keyword">in</span> model.layers[<span class="number">1</span>:]</span><br><span class="line">                      <span class="keyword">if</span> <span class="built_in">hasattr</span>(layer, <span class="string">&#x27;activation&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># replace relu activation</span></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> layer_dict:</span><br><span class="line">            <span class="keyword">if</span> layer.activation == keras.activations.relu:</span><br><span class="line">                layer.activation = tf.nn.relu</span><br><span class="line"></span><br><span class="line">        <span class="comment"># re-instanciate a new model</span></span><br><span class="line">        new_model = VGG16(weights=<span class="string">&#x27;imagenet&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> new_model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deprocess_image</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Same normalization as in:</span></span><br><span class="line"><span class="string">    https://github.com/fchollet/keras/blob/master/examples/conv_filter_visualization.py</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> np.ndim(x) &gt; <span class="number">3</span>:</span><br><span class="line">        x = np.squeeze(x)</span><br><span class="line">    <span class="comment"># normalize tensor: center on 0., ensure std is 0.1</span></span><br><span class="line">    x -= x.mean()</span><br><span class="line">    x /= (x.std() + <span class="number">1e-5</span>)</span><br><span class="line">    x *= <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># clip to [0, 1]</span></span><br><span class="line">    x += <span class="number">0.5</span></span><br><span class="line">    x = np.clip(x, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># convert to RGB array</span></span><br><span class="line">    x *= <span class="number">255</span></span><br><span class="line">    <span class="keyword">if</span> keras.backend.image_data_format() == <span class="string">&#x27;th&#x27;</span>:</span><br><span class="line">        x = x.transpose((<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>))</span><br><span class="line">    x = np.clip(x, <span class="number">0</span>, <span class="number">255</span>).astype(<span class="string">&#x27;uint8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_compute_gradients</span>(<span class="params">tensor, var_list</span>):</span></span><br><span class="line">    grads = tf.gradients(tensor, var_list)</span><br><span class="line">    <span class="keyword">return</span> [grad <span class="keyword">if</span> grad <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> tf.zeros_like(var)</span><br><span class="line">            <span class="keyword">for</span> var, grad <span class="keyword">in</span> <span class="built_in">zip</span>(var_list, grads)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grad_cam</span>(<span class="params">input_model, image, category_index, layer_name</span>):</span></span><br><span class="line">    nb_classes = <span class="number">1000</span></span><br><span class="line">    target_layer = <span class="keyword">lambda</span> x: target_category_loss(x, category_index, nb_classes)</span><br><span class="line">    x = Lambda(target_layer, output_shape=target_category_loss_output_shape)(input_model.output)</span><br><span class="line">    model = Model(inputs=input_model.<span class="built_in">input</span>, outputs=x)</span><br><span class="line">    model.summary()</span><br><span class="line">    loss = K.<span class="built_in">sum</span>(model.output)</span><br><span class="line">    conv_output = [l <span class="keyword">for</span> l <span class="keyword">in</span> model.layers <span class="keyword">if</span> l.name <span class="keyword">is</span> layer_name][<span class="number">0</span>].output</span><br><span class="line">    grads = normalize(_compute_gradients(loss, [conv_output])[<span class="number">0</span>])</span><br><span class="line">    gradient_function = K.function([model.<span class="built_in">input</span>], [conv_output, grads])</span><br><span class="line"></span><br><span class="line">    output, grads_val = gradient_function([image])</span><br><span class="line">    output, grads_val = output[<span class="number">0</span>, :], grads_val[<span class="number">0</span>, :, :, :]</span><br><span class="line"></span><br><span class="line">    weights = np.mean(grads_val, axis=(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">    cam = np.ones(output.shape[<span class="number">0</span>: <span class="number">2</span>], dtype=np.float32)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, w <span class="keyword">in</span> <span class="built_in">enumerate</span>(weights):</span><br><span class="line">        cam += w * output[:, :, i]</span><br><span class="line"></span><br><span class="line">    cam = cv2.resize(cam, (<span class="number">224</span>, <span class="number">224</span>))</span><br><span class="line">    cam = np.maximum(cam, <span class="number">0</span>)</span><br><span class="line">    heatmap = cam / np.<span class="built_in">max</span>(cam)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Return to BGR [0..255] from the preprocessed image</span></span><br><span class="line">    image = image[<span class="number">0</span>, :]</span><br><span class="line">    image -= np.<span class="built_in">min</span>(image)</span><br><span class="line">    image = np.minimum(image, <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">    cam = cv2.applyColorMap(np.uint8(<span class="number">255</span> * heatmap), cv2.COLORMAP_JET)</span><br><span class="line">    cam = np.float32(cam) + np.float32(image)</span><br><span class="line">    cam = <span class="number">255</span> * cam / np.<span class="built_in">max</span>(cam)</span><br><span class="line">    <span class="keyword">return</span> np.uint8(cam), heatmap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="string">&quot;1&quot;</span></span><br><span class="line">preprocessed_input = load_image(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">model = VGG16(weights=<span class="string">&#x27;imagenet&#x27;</span>)</span><br><span class="line"></span><br><span class="line">predictions = model.predict(preprocessed_input)</span><br><span class="line">top_1 = decode_predictions(predictions)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predicted class:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s (%s) with probability %.2f&#x27;</span> % (top_1[<span class="number">1</span>], top_1[<span class="number">0</span>], top_1[<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line">predicted_class = np.argmax(predictions)</span><br><span class="line">cam, heatmap = grad_cam(model, preprocessed_input, predicted_class, <span class="string">&quot;block5_conv3&quot;</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;gradcam.jpg&quot;</span>, cam)</span><br><span class="line"></span><br><span class="line">register_gradient()</span><br><span class="line">guided_model = modify_backprop(model, <span class="string">&#x27;GuidedBackProp&#x27;</span>)</span><br><span class="line">saliency_fn = compile_saliency_function(guided_model)</span><br><span class="line">saliency = saliency_fn([preprocessed_input, <span class="number">0</span>])</span><br><span class="line">gradcam = saliency[<span class="number">0</span>] * heatmap[..., np.newaxis]</span><br><span class="line">cv2.imwrite(<span class="string">&quot;guided_gradcam.jpg&quot;</span>, deprocess_image(gradcam))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(predictions.shape)</span><br></pre></td></tr></table></div></figure><p>CAM的原理是实现可解释性的根本</p><p><img src="https://pic4.zhimg.com/80/v2-b89d6fa90da51e312ed7f2e453ca53bb_720w.jpg" alt="img"></p><p>上面是一个传统CNN的结构，通过卷积和池化层后，把特征图拉平成一维，然后是全连接层进行分类。</p><p><img src="https://pic1.zhimg.com/80/v2-bb08eb2b51a0222d57c7a0e51edffb60_720w.jpg" alt="img"></p><p>图中有一个GAP池化层，全局平均池化层。<strong>这个就是求取每一个通道的均值，可以理解为核是和特征图一样大的一般的平均池化层</strong>，假如输出特征图是一个8通道的，224x224的特征图，那么经过GAP这个池化层，就会得到8个数字，<strong>一个通道贡献一个数字，这个数字是一个通道的代表</strong></p><p>然后经过GAP之后的一维向量，再跟上一个全连接层，得到类别的概率。</p><p><img src="https://pic4.zhimg.com/80/v2-6fa0ed0643113c4b9bd0bc08456e67d7_720w.jpg" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-de9017e32fb8eea64b10a455f1c88916_720w.jpg" alt="img"></p><p><strong>之前训练的模型用不了，所以才有了Grad-CAM的提出。</strong></p><p>Grad-CAM思路和CAM也是相同的，也是需要得到特征图每一个通道的权重值，然后做一个加权和。</p><p>所以关键在于，如何计算这个权重值，<strong>论文提出了这样的计算方法：</strong></p><p><img src="https://pic4.zhimg.com/80/v2-03252712304aadfcb32dd60d3dc4e9b3_720w.jpg" alt="img"></p><p>其中，z是一个特征图的像素量，就是width<em>height，可以看到，前面就是CAM的GAP的一个过程，后面的<img   src="https://www.zhihu.com/equation?tex=y%5Ec" style=""  alt="[公式]">是模型给类别c的打分，<img   src="https://www.zhihu.com/equation?tex=A_%7Bij%7D%5Ek" style=""  alt="[公式]">就是特征图中ij这个位置的元素值。<em>*那么对这个求导，其实就是这个位置的梯度。</em></em>在论文中作者证明了Grad-CAM和CAM的等价的结论，想了解的可以看看。</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112152102612.png" alt="image-20211215210235439"></p>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>系统分析与设计 - 01 期末试题</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/12/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2001%20%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/12/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2001%20%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98/</id>
    <published>2021-12-15T07:25:34.872Z</published>
    <updated>2022-01-01T02:17:49.358Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="系统分析与设计-01-期末试题"   >          <a href="#系统分析与设计-01-期末试题" class="heading-link"><i class="fas fa-link"></i></a>系统分析与设计 - 01 期末试题</h1>      <span id="more"></span><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252125386.png" alt="image-20211225212544303"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252126650.png" alt="image-20211225212601588"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252126172.png" alt="image-20211225212614095"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252127825.png" alt="image-20211225212738740"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252127353.png" alt="image-20211225212746273"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252127836.png" alt="image-20211225212755769"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128602.png" alt="image-20211225212805528"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128179.png" alt="image-20211225212816114"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128387.png" alt="image-20211225212827305"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128687.png" alt="image-20211225212838624"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128979.png" alt="image-20211225212848901"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252128355.png" alt="image-20211225212859285"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129386.png" alt="image-20211225212910310"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129880.png" alt="image-20211225212919823"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129557.png" alt="image-20211225212928474"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129937.png" alt="image-20211225212938863"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129032.png" alt="image-20211225212945952"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252129291.png" alt="image-20211225212953212"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112252130144.png" alt="image-20211225213000075"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311149229.png" alt="image-20211231114920901"></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112311149357.png" alt="image-20211231114933245"></p>]]></content>
    
    
    <summary type="html">系统分析与设计</summary>
    
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>标题</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/25/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/%E9%A9%AC%E5%8E%9F%20-%2001%20%E7%8F%AD%E8%AF%BE%E9%A2%98/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/25/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/%E9%A9%AC%E5%8E%9F%20-%2001%20%E7%8F%AD%E8%AF%BE%E9%A2%98/</id>
    <published>2021-11-25T04:01:44.184Z</published>
    <updated>2021-11-25T04:02:42.704Z</updated>
    
    <content type="html"><![CDATA[<p>#</p><span id="more"></span>]]></content>
    
    
    <summary type="html">描述</summary>
    
    
    
    <category term="分类" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>系统分析与设计 - 00 学堂在线题目</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/23/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2000%20%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF%E9%A2%98%E7%9B%AE/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/23/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%20-%2000%20%E5%AD%A6%E5%A0%82%E5%9C%A8%E7%BA%BF%E9%A2%98%E7%9B%AE/</id>
    <published>2021-11-23T06:40:23.189Z</published>
    <updated>2021-12-31T02:27:13.900Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="系统分析与设计-00-学堂在线题目"   >          <a href="#系统分析与设计-00-学堂在线题目" class="heading-link"><i class="fas fa-link"></i></a>系统分析与设计 - 00 学堂在线题目</h1>      <span id="more"></span>        <h2 id="第1章-系统分析与设计概述"   >          <a href="#第1章-系统分析与设计概述" class="heading-link"><i class="fas fa-link"></i></a>第1章 系统分析与设计概述</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>项目经理是系统构造人员之一。</td><td>X</td></tr><tr><td>信息系统是一类处理信息的系统软件。</td><td>X</td></tr><tr><td>系统规划是在项目立项之后进行。</td><td>X</td></tr><tr><td>敏捷软件开发过程模型是一种轻量级的过程模型<strong>。</strong></td><td>V</td></tr><tr><td>应用软件依赖于系统运行环境。</td><td>V</td></tr><tr><td>信息系统通常由信息化基础设施、应用软件、数据库管理系统、数据库、业务数据、_<em>_</em>等要素组成。</td><td>[ “用户” ]</td></tr><tr><td>软件被划分为系统软件、应用软件和_<em>_</em>。</td><td>[ “中间件”, “中间件软件” ]</td></tr><tr><td>在信息系统生命周期中的_<em>_</em>、系统需求分析、系统设计阶段进行系统分析与设计活动。</td><td>[ “系统规划” ]</td></tr><tr><td>在螺旋式开发过程模型中，系统软件编码是在_<em>_</em>阶段的开发活动</td><td>[ “实施工程” ]</td></tr><tr><td>复用粒度最大的系统开发方法是_<em>_</em>。</td><td>[ “面向服务的系统开发方法” ]</td></tr></tbody></table></div></div><p>1．比较系统分析员与系统架构设计师的角色职责有何异同？</p><p>2．软件本质特性有哪些？</p><p>3．哪些开发活动是跨信息系统生命周期？</p><p>4．敏捷软件开发过程模型如何实施？</p><p>5．现代软件系统开发有哪些主流技术方法？</p><p>1.系统分析师（systemanalyst）是在系统开发中进行业务需求分析、系统需求分析、可行性分析、业务建模和指导项目开发的人。系统架构师协同系统分析师的工作，建议系统分析师按什么标准，什么工具，什么模式，什么技术去思考系统。同时，系统架构师应该对系统分析师所提出的问题，碰到的难题及时地提出解决的方法。 2.软件是复杂的，软件是人类思维和智能的一种延伸和在异体上的再现，远比任何以往人类的创造物都要复杂的多，软件的复杂性是软件的固有属性、本质特性。软件是不可见的，软件是客观世界空间和计算机空间之间的一种逻辑实体，不具有物理的形体特征。软件是不断变化的，它需要随着应用、硬件、用户和社会等各种因素的变化而不断的被修改和扩展。软件必须遵从人为的惯例并适应已有的技术和系统，软件需要随接口的不同而改变，随时间的推移而变化，而这些变化是不同的人设计的结果，许多复杂性来自保持与其他接口的一致，对软件的任何再设计，都无法简化这些复杂特性。 3.软件测试、软件维护、软件配置、软件质量保证、软件审核等等。 4.敏捷开发迭代流程一般遵循以下五个步骤：需求分析（requirements analysis）产品设计（design）功能编码（coding）功能测试（testing）部署评估（deployment / evaluation）。 </p><p>5.软件开发的8大主流方法：结构化方法、Jackson方法、原型方法、面向对象方法、敏捷方法、并列争求法、水晶法、自适应软件开发（ASD)。</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112281541769.png" style="zoom:80%;" /></p>        <h2 id="第2章-面向对象建模基础"   >          <a href="#第2章-面向对象建模基础" class="heading-link"><i class="fas fa-link"></i></a>第2章 面向对象建模基础</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>问题</th><th>答案</th></tr></thead><tbody><tr><td>面向对象的需求分析与编程语言无关。</td><td>V</td></tr><tr><td>活动图可以表示并发活动。</td><td>V</td></tr><tr><td>状态机图有自转换状态。</td><td>V</td></tr><tr><td>部署图的节点中可以嵌入构件。</td><td>V</td></tr><tr><td>BPMN可以基于WS-BPEL转换为软件流程组件。</td><td>V</td></tr><tr><td>面向对象思想应用在面向对象分析、_<em>_</em>、面向对象编程过程中。</td><td>[ “面向对象设计” ]</td></tr><tr><td>类图中类之间的关系有关联关系、依赖关系、聚合关系、_<em>_</em>。</td><td>[ “泛化关系” ]</td></tr><tr><td>通信图中的元素包括对象、_<em>_</em> 、链和自反链。</td><td>[ “消息” ]</td></tr><tr><td>BPMN流对象分为三类：活动、_<em>_</em>、网关。</td><td>[ “事件” ]</td></tr><tr><td>BPMN中数据分为数据对象、_<em>_</em>、数据输入和数据输出等。</td><td>[ “数据对象集” ]</td></tr></tbody></table></div></div><p>1．面向对象分析与面向对象设计如何建立联系？</p><p>2．BPMN和UML的应用场景有什么区别？</p><p>3．UML的面向对象思想体现在哪些方面？</p><p>4．包图与类图是否可以放在一起？</p><p>1.面向对象分析的输入是用户的功能需求，输出是简单的、理性化的分析模型，此阶段的工作更多侧重于如何理解软件的功能需求；面向对象设计的输入是面向对象分析的结果，是最终的、细化后的设计模型，此阶段的工作更多侧重于如何得到一个合适的、完整的解决方案。 2.UML应用于对软件系统进行规范化，可视化，模型化，文档化。BPMN应用于业务流程建模，方便人理解和有助于协同组织之间的业务。 3.UML提供了四种通用机制，它们被一直地应用到模型中，描述了达到面向对象建模目的的4种策略，并在UML的不同语境下被反复运用，是的UML更简单并易于使用。这四种机制分别是：规格说明（specifications）、修饰（adornments）、通用划分（common divisions）和扩展机制（extensibility mechanisms）。 4.可以。</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112291007067.png" alt="image-20211229100752017"></p>        <h2 id="第3章-系统规划"   >          <a href="#第3章-系统规划" class="heading-link"><i class="fas fa-link"></i></a>第3章 系统规划</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>系统规划需要在项目立项后进行。</td><td>X</td></tr><tr><td>信息系统建设目标必须支持组织机构目标达成。</td><td>V</td></tr><tr><td>系统规划内容包括功能需求分析。</td><td>X</td></tr><tr><td>BSP方法可以直接将组织机构目标转换为信息系统目标。</td><td>X</td></tr><tr><td>在完成项目成本预算后就可以进行任务分工。</td><td>X</td></tr><tr><td>系统规划涉及组织机构的信息系统目标、信息化现状分析、系统建设方案、_<em>_</em>等内容。</td><td>[ “信息系统建设计划” ]</td></tr><tr><td>系统规划步骤包括规划准备、初步调查、战略与现状分析、_<em>_</em>和确定总体架构等。</td><td>[ “确定信息系统建设目标和战略” ]</td></tr><tr><td>业务流程重组强调以_<em>_</em>、以关心客户的需求和满意度为目标，对现有业务流程进行不断地优化或重新设计。</td><td>[ “业务流程为改造对象中心” ]</td></tr><tr><td>企业价值链分析可以从内部价值链、纵向价值链和_<em>_</em>价值链角度进行分析。</td><td>[ “横向价值链” ]</td></tr><tr><td>在项目成本估算中，既可以用货币单位表示，也可以采用工时、人月、_<em>_</em>等单位表示费用估计值。</td><td>[ “人天” ]</td></tr></tbody></table></div></div><p>\1. 为什么需要在系统规划阶段进行可行性分析？</p><p>2．哪种方法适合于协作型企业的信息系统规划？</p><p>3．如何分析组织机构的价值链？</p><p>4．如何进行项目的WBS工作任务分解？</p><p>5．在项目计划中，如何实现任务进度安排？</p><p>6．在信息系统项目开发中，需要遵从工程伦理道德规范？</p><p>1.可行性研究的意义在于，虽然可行性研究不能指出项目最终的详细计划和方向，但可行性研究可以在项目定义阶段用较小的代价识别出错误构思的系统，从而规避未来更多的资源投入的损失（时间、资金、人力、机会），或者因遭遇到无法逾越的技术障碍或环境障碍导致的不可避免的失败。 2.企业系统规划法（BPS）是从企业目标入手，逐步将企业目标转化为管理信息系统的目标和结构，从而更好地支持企业目标的实现。 3.运用价值链分析法确定与成本管理有关的价值活动企业的价值活动可以分为五种主要活动和四种辅助活动。五种主要活动包括（1）投入性活动，如收货、储存和配置等相关活动；（2）生产作业，即将投入转化为最终产品的相关活动；（3）产出性活动，如产成品的运输、储存、客户联系、定单处理等；（4）销售活动，旨在让顾客了解和购买商品，如广告、促销、销售机构的费用等；（5）服务活动，包括培训、修理、维护保养、部件更新等，旨在提高产品的附加值。 4.工作分解结构（简称WBS）跟因数分解是一个原理，就是把一个项目，按一定的原则分解，项目分解成任务，任务再分解成一项项工作，再把一项项工作分配到每个人的日常活动中，直到分解不下去为止。即：项目→任务→工作→日常活动。工作分解结构以可交付成果为导向，对项目要素进行的分组，它归纳和定义了项目的整个工作范围，每下降一层代表对项目工作的更详细定义。WBS总是处于计划过程的中心，也是制定进度计划、资源需求、成本预算、风险管理计划和采购计划等的重要基础。 5.通过里程碑式管理是控制项目进度。可以利用里程碑来管理项目，让包括自己、客户、组员和领导都了解项目的整个进度，完成了多少，该以哪种节奏工作。里程碑一般是完成阶段的工作标志，标志着上一个阶段的结束和下一个阶段的开始。通过里程碑项目经理可以为下一步工作作出决策，准确评估。 6.需要。工程伦理是调整工程与技术、工程与社会之间关系的道德规范,对工程师的伦理行为和工程建设起着引导、规范、开拓等重要作用。 工程伦理准则包括五个方面:以人为本、关爱生命、安全可靠、关爱自然、公平正义。 工程师的社会职责事关人类的前途和命运,工程师要对工程活动的全面社会意义和长远社会影响建立自觉的认识,承担起全部的社会责任。</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112300010982.png" alt="image-20211230001040860"></p>        <h2 id="第4章-系统需求分析"   >          <a href="#第4章-系统需求分析" class="heading-link"><i class="fas fa-link"></i></a>第4章 系统需求分析</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>BPMN的编排流程中没有泳池。</td><td>V</td></tr><tr><td>UML用例之间的扩展关系箭头是从扩展用例指向被扩展用例。</td><td>V</td></tr><tr><td>活动图无法表达并发执行的活动。</td><td>X</td></tr><tr><td>类图中两个类之间的泛化关系是指两个类之间的一般与特殊关系。</td><td>V</td></tr><tr><td>需求变更管理需要有专门的变更过程控制。</td><td>V</td></tr><tr><td>观察法分为旁观式观察、解释式观察、_<em>_</em>。</td><td>[ “参与式观察” ]</td></tr><tr><td>调查表中的封闭式问题有3种形式：单选/多选问题、评价问题、_<em>_</em>。</td><td>[ “排序问题” ]</td></tr><tr><td>用例图包含的元素有用例、关系、_<em>_</em>。</td><td>[ “参与者”, “角色” ]</td></tr><tr><td>需求规格说明书中非常重要的三部分内容分别是功能性需求、_<em>_</em>、接口需求。</td><td>[ “非功能性需求” ]</td></tr><tr><td>一个类包含三方面要素：类名、属性、_<em>_</em>。</td><td>[ “操作”, “方法” ]</td></tr></tbody></table></div></div><p>1．哪些需求采集方法适用于初期需求不明确的场景？</p><p>2．调查表法在什么场景中比较有效？</p><p>3．快速应用开发与原型法有什么区别？</p><p>\4. BPMN与UML中活动图在表现业务流程方面有什么区别？</p><p>\5. 功能性需求与非功能性需求对项目难易程度的影响分别有多大？</p><p>备注：每个学生除参与讨论以上问题外，还需自拟本章讨论问题或参与他人问题讨论。</p><p>\1. 原型法、头脑风暴法 2. 相对来说比较清晰简单的时候 3. 快速应用程序开发(RAD)不仅仅是一个流程或平台(稍后我们将讨论RAD与敏捷)，它代表了软件设计、构建和交付方式的根本转变。除了加快产品上市、降低成本和提高质量之外，RAD在概念上还与其他IT趋势保持一致，这些趋势有利于敏捷性、迭代和重用。 4. BPMN可以很详细地描述组织机构的业务流程过程，UML中活动图适合简略描述业务流程。 5. 功能性需求，一般是我们显性易见的，就是一般实现了什么功能，提供了什么服务，非功能性需求，以下应用维基百科的定义（虽然有些晦涩和绕口，但是我认为是比较精到和准确的） 在系统工程及需求工程中，非功能性需求（Non-functional requirement）是指依一些条件判断系统运作情形或其特性，而不是针对系统特定行为的需求。和非功能性需求相对的是功能需求，后者会定义系统特定的行为或功能。非功能性需求也可以视为为了满足客户业务需求而需要符合，但又不在功能需求以外的特性。</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202112301313065.png" alt="image-20211230131319917"></p>        <h2 id="第5章-系统架构设计"   >          <a href="#第5章-系统架构设计" class="heading-link"><i class="fas fa-link"></i></a>第5章 系统架构设计</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>类图模型在系统设计各阶段都需要涉及。</td><td>V</td></tr><tr><td>系统数据架构是一类数据库模型。</td><td>X</td></tr><tr><td>系统架构的本质就是软件架构。</td><td>X</td></tr><tr><td>客户机/服务器体系架构适合Web应用。</td><td>V</td></tr><tr><td>异步消息通信模式适合银行转账业务。</td><td>X</td></tr><tr><td>系统架构通常包括系统拓扑架构、系统数据架构、系统软件架构和_<em>_</em>等。</td><td>[ “系统应用架构”, “应用架构” ]</td></tr><tr><td>典型软件系统一般被划分为表示层、业务逻辑层、<em>__</em>和数据存储层。</td><td>[ “数据存取访问层” ]</td></tr><tr><td>客户/服务模式可以细分为<em>__</em>、多客户/多服务模式、多层客户/服务模式。</td><td>[ “多客户/单服务模式” ]</td></tr><tr><td>在面向服务的软件架构中，其通信模式主要有服务注册通信模式、<em>__</em>、服务句柄代理转发通信模式、服务发现通信模式。</td><td>[ “服务代理转发通信模式” ]</td></tr><tr><td>软件对象之间的消息通信模式主要有同步消息通信模式和<em>__</em>。</td><td>[ “异步消息通信模式” ]</td></tr></tbody></table></div></div><p>1．系统设计过程涉及哪些主要开发活动？</p><p>2．系统架构设计如何满足系统非功能需求？</p><p>3．系统数据架构设计一般给出哪些内容？</p><p>4．微服务与微服务体系架构有何异同？</p><p>5．软件架构模式在系统开发中应如何选择？</p><p>1.系统设计是根据系统分析的结果，运用系统科学的思想和方法，设计出能最大限度满足所要求的目标 (或目的) 的新系统的过程。 系统设计内容，包括确定系统功能、设计方针和方法，产生理想系统并作出草案，通过收集信息对草案作出修正产生可选设计方案，将系统分解为若干子系统，进行子系统和总系统的详细设计并进行评价，对系统方案进行论证并作出性能效果预测。 2.考虑安全性、可靠性、互操作性、健壮性等非功能需求，然后依据相应的系统开放方法进行具体的详细设计。 3.数据架构是一套规范和文档的集合，包括：企业数据模型；信息的价值链分析：使数据与业务流程及其他企业架构的组件相一致；相关数据交付架构：包括数据库架构、数据整合架构、数据仓库/商务智能架构、文档和内容架构，以及元数据架构。 4.微服务是SOA的一种，是一种设计方法，其中包含多个服务，服务之间通过相互依赖最终提供一系列的功能。一个服务通常以独立的形式存在与操作系统进程中。各个服务之间通过网络调用。而微服务架构:其实和SOA架构类似,微服务是在SOA上做的升华，微服务架构强调的一个重点是“业务需要彻底的组件化和服务化”，原有的单个业务系统会拆分为多个可以独立开发、设计、运行的小应用。这些小应用之间通过服务完成交互和集成。 5.系统设计师应当明确分离关注点。每层负责一个明确的任务，由于关注点的分离，易于测试：每个层都是可测试的，可维护的并且易于更新。在这样明确之后，再选择合适的软件架构模式。</p>        <h2 id="第6章-软件建模设计"   >          <a href="#第6章-软件建模设计" class="heading-link"><i class="fas fa-link"></i></a>第6章 软件建模设计</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>处于相同状态的同类的不同对象对同一事件的反应往往是一样的，而处于不同状态的同一对象则对同一事件会做出不同反应。</td><td>V</td></tr><tr><td>只要将包中元素的可见性设为公共的，则其他包就可以访问它。</td><td>X</td></tr><tr><td>聚合与泛化都是面向对象系统支持功能复用的强大技术。</td><td>V</td></tr><tr><td>在UML构件图中，需要定义消息来描述构件之间的联系。</td><td>X</td></tr><tr><td>所有对象都通过类来描述，所有类都具有对象。</td><td>X</td></tr><tr><td><em>状态机图__</em>通过对对象的各种状态建立模型来描述对象随时间变化的动态行为，并且它是以独立的对象为中心进行描述的。</td><td>[ “状态机图” ]</td></tr><tr><td>在UML类图中，类用矩形图符来表示，这个矩形由3个部分组成，分别是类型名、<em>属性__</em>和操作。</td><td>[ “属性” ]</td></tr><tr><td>UML中的交互图包括顺序图和<em>通信图, 协作图__</em>。</td><td>[ “通信图”, “协作图” ]</td></tr><tr><td>UML中顺序图表示为二维图，纵向是对象，横向代表参与交互对象之间的<em>消息__</em>。</td><td>[ “消息” ]</td></tr><tr><td>状态机图由对象的状态和连接这些状态的<em>转换__</em>组成。</td><td>[ “转换” ]</td></tr></tbody></table></div></div><p>1．系统的静态模型、交互模型和状态机模型各有哪些特点？</p><p>2．类之间的关系有哪些？举例描述这些关系。</p><p>3．顺序图和通信图有哪些区别和联系？</p><p>\4. 泛化有什么作用？如何实现类继承？</p><p>\5. 接口和抽象类有什么区别和联系？</p><p>\1. 静态结构视图用来表示软件系统的类程序组成结构，同时也反映各个类中封装的数据与操作方法。静态结构视图支撑面向对象程序编程。2. 聚合关系，包括专属聚合，从属聚合，拥有聚合，成员聚合；泛化与继承关系；关联关系。3. 二者均属于动态交互模型图，顺序图强调时间先后关系，对象间消息的传递以时间顺序可视化表示，通信图消息则按空间布局。4. 泛化是指多个类的公共特征抽象到一个更一般化的类中。5. 抽象类：在Java中被abstract关键字修饰的类称为抽象类，被abstract关键字修饰的方法称为抽象方法，抽象方法只有方法的声明，没有方法体。抽象类的特点：抽象类不能被实例化只能被继承；包含抽象方法的一定是抽象类，但是抽象类不一定含有抽象方法；抽象类中的抽象方法的修饰符只能为public或者protected，默认为public；一个子类继承一个抽象类，则子类必须实现父类抽象方法，否则子类也必须定义为抽象类；抽象类可以包含属性、方法、构造方法，但是构造方法不能用于实例化，主要用途是被子类调用。接口：Java中接口使用interface关键字修饰，特点为:接口可以包含变量、方法；变量被隐士指定为public static final，方法被隐士指定为public abstract（JDK1.8之前）；接口支持多继承，即一个接口可以extends多个接口，间接的解决了Java中类的单继承问题；一个类可以实现多个接口。</p>        <h2 id="第7章-用户界面设计"   >          <a href="#第7章-用户界面设计" class="heading-link"><i class="fas fa-link"></i></a>第7章 用户界面设计</h2>      <div class="table-container"><div class="table-container"><table><thead><tr><th>题目</th><th>答案</th></tr></thead><tbody><tr><td>信息系统的功能是通过用户与系统界面交互来完成。</td><td>V</td></tr><tr><td>人的视觉规律是以中心为重点向四周发散。</td><td>X</td></tr><tr><td>在详细界面设计前需要进行系统原型设计。</td><td>V</td></tr><tr><td>输入数据格式校验是通过执行检查程序来实现的。</td><td>V</td></tr><tr><td>页面的数据列表可以打印输出。</td><td>X</td></tr><tr><td>为减少用户记忆负担，在界面上可以给出场景导引、默认值、<em>下拉列表值, 快捷方式, 逐次推进的提示方式__</em>等提示。</td><td>[ “下拉列表值”, “快捷方式”, “逐次推进的提示方式” ]</td></tr><tr><td>用户界面设计一般包括界面结构设计、界面交互设计、界面导航设计、界面视觉设计和<em>界面布局设计, 界面输入/输出设计__</em>。</td><td>[ “界面布局设计”, “界面输入/输出设计” ]</td></tr><tr><td>Web页面导航主要有水平栏目导航、垂直栏目导航、混合栏目导航和<em>页面内容导航__</em>。</td><td>[ “页面内容导航” ]</td></tr><tr><td>在移动App页面布局设计中，需要对页面信息内容、页面主题内容、用户行为心理和<em>用户功能操作__</em>进行整体考虑。</td><td>[ “用户功能操作” ]</td></tr><tr><td>在手机App页面布局设计中，页面可以分为背景层、内容层、悬浮层和<em>弹出层__</em>。</td><td>[ “弹出层” ]</td></tr></tbody></table></div></div><p>1．用户界面设计需要遵循哪些基本原则？</p><p>2．用户界面输入需要考虑解决哪些问题？</p><p>3．Web页面结构设计与移动App界面结构设计有哪些异同？</p><p>4．Web页面输出有哪些形式？</p><p>5．用户界面交互设计主要包括哪些方面的内容？</p><p>1.用户原则。人机界面设计首先要确立用户类型。划分类型可以从不同的角度，视实际情况而定。确定类型后要针对其特点预测他们对不同界面的反应。这就要从多方面设计分析。信息最小量原则。人机界面设计要尽量减少用户记忆负担，采用有助于记忆的设计方案。帮助和提示原则。要对用户的操作命令作出反应，帮助用户处理问题。系统要设计有恢复出错现场的能力，在系统内部处理工作要有提示，尽量把主动权让给用户。媒体最佳组合原则。多媒体界面的成功并不在于仅向用户提供丰富的媒体，而应在相关理论指导下，注意处理好各种媒体间的关系,恰当选用。 2.制定输入规则，防止无效输入；一切的输入都是威胁，需要制定相应的安全规则。 3.web系统基于B/S架构实现信息系统,通常包含大量功能页面,移动App开发基于有限软硬件资源,需要面对多终端多使用场景的问题。 4.数据报表，数据图。 5.交互设计，它主要指的是两个或多个个体之间交流和互动方式的设计，以达成某种设计产品的目的。交互设计的目标一般从“可用性”和”用户体验“两个层面出发，以帮助解决用户需求。首先是明确商业目标和用户目标。商业目标是很多初级的设计师容易忽略甚至抗拒的，在设计中，不仅仅要考虑用户体验和用户目标，还要考虑业务和商业目标。然后是在不同层次上思考和规划。产品的功能层、信息层、行为层等。</p>]]></content>
    
    
    <summary type="html">系统分析与设计</summary>
    
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="系统分析与设计" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Polaris - 01 认识 Polaris</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/18/%E4%BA%91%E5%8E%9F%E7%94%9F/Polaris%20-%2001%20%E8%AE%A4%E8%AF%86%20Polaris/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/18/%E4%BA%91%E5%8E%9F%E7%94%9F/Polaris%20-%2001%20%E8%AE%A4%E8%AF%86%20Polaris/</id>
    <published>2021-11-17T16:00:00.000Z</published>
    <updated>2021-11-20T08:34:10.222Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="Polaris-01-认识-Polaris"   >          <a href="#Polaris-01-认识-Polaris" class="heading-link"><i class="fas fa-link"></i></a>Polaris - 01 认识 Polaris</h1>      <span id="more"></span><p>服务治理是微服务架构下的重要问题，一般的微服务治理需要这样几个模块。</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>        <h2 id="1-安装-Polaris"   >          <a href="#1-安装-Polaris" class="heading-link"><i class="fas fa-link"></i></a>1. 安装 Polaris</h2>              <h2 id="2-使用-Polaris-搭建-real-world-app"   >          <a href="#2-使用-Polaris-搭建-real-world-app" class="heading-link"><i class="fas fa-link"></i></a>2. 使用 Polaris 搭建 real world app</h2>      ]]></content>
    
    
    <summary type="html">Polaris</summary>
    
    
    
    <category term="Polaris" scheme="http://zjeff-953.gitee.io/zjeff/categories/Polaris/"/>
    
    
    <category term="Polaris" scheme="http://zjeff-953.gitee.io/zjeff/tags/Polaris/"/>
    
  </entry>
  
  <entry>
    <title>学点别的 - 02 维特根斯坦与他的哲学</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/14/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84%20-%2002%20%E7%BB%B4%E7%89%B9%E6%A0%B9%E6%96%AF%E5%9D%A6%E4%B8%8E%E4%BB%96%E7%9A%84%E5%93%B2%E5%AD%A6/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/14/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84%20-%2002%20%E7%BB%B4%E7%89%B9%E6%A0%B9%E6%96%AF%E5%9D%A6%E4%B8%8E%E4%BB%96%E7%9A%84%E5%93%B2%E5%AD%A6/</id>
    <published>2021-11-14T06:53:01.085Z</published>
    <updated>2021-11-17T13:54:30.992Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="学点别的-02-维特根斯坦与他的哲学"   >          <a href="#学点别的-02-维特根斯坦与他的哲学" class="heading-link"><i class="fas fa-link"></i></a>学点别的 - 02 维特根斯坦与他的哲学</h1>      <span id="more"></span>        <h2 id="《数据密集型系统设计》和维特根斯坦"   >          <a href="#《数据密集型系统设计》和维特根斯坦" class="heading-link"><i class="fas fa-link"></i></a>《数据密集型系统设计》和维特根斯坦</h2>              <h2 id="维特根斯坦的传奇色彩"   >          <a href="#维特根斯坦的传奇色彩" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦的传奇色彩</h2>              <h2 id="维特根斯坦的人生经历"   >          <a href="#维特根斯坦的人生经历" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦的人生经历</h2>              <h2 id="维特根斯坦和康德"   >          <a href="#维特根斯坦和康德" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和康德</h2>              <h2 id="维特根斯坦和《逻辑哲学论》"   >          <a href="#维特根斯坦和《逻辑哲学论》" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和《逻辑哲学论》</h2>              <h2 id="维特根斯坦和财富"   >          <a href="#维特根斯坦和财富" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和财富</h2>              <h2 id="维特根斯坦和图灵"   >          <a href="#维特根斯坦和图灵" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和图灵</h2>              <h2 id="维特根斯坦和《哲学研究》"   >          <a href="#维特根斯坦和《哲学研究》" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和《哲学研究》</h2>      <p>维氏后期提出“语言—游戏说”、“家族相似性”、“不要去想而要去看”等等理论和理念，放弃了以逻辑规则为意义标准的思想，与创立逻辑原子主义的罗素和题主提及的哥德尔等逻辑学家在哲学上分道扬镳，自然无法得到他们的认同。事实上，此时维特根斯坦的身份是分析哲学中日常语言流派的奠基人（之一）。</p>        <h2 id="维特根斯坦和真值表"   >          <a href="#维特根斯坦和真值表" class="heading-link"><i class="fas fa-link"></i></a>维特根斯坦和真值表</h2>              <h2 id="徐英瑾和维特根斯坦"   >          <a href="#徐英瑾和维特根斯坦" class="heading-link"><i class="fas fa-link"></i></a>徐英瑾和维特根斯坦</h2>      <p>《心智、语言和机器 ———— 维特根斯坦哲学和人工智能科学的对话》</p>        <h2 id="程序语言和维特根斯坦"   >          <a href="#程序语言和维特根斯坦" class="heading-link"><i class="fas fa-link"></i></a>程序语言和维特根斯坦</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://www.omegaxyz.com/2018/06/21/boolean-algebra/" >https://www.omegaxyz.com/2018/06/21/boolean-algebra/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">学点别的 - 02 维特根斯坦与他的哲学</summary>
    
    
    
    <category term="学点别的" scheme="http://zjeff-953.gitee.io/zjeff/categories/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/"/>
    
    
    <category term="学点别的" scheme="http://zjeff-953.gitee.io/zjeff/tags/%E5%AD%A6%E7%82%B9%E5%88%AB%E7%9A%84/"/>
    
  </entry>
  
  <entry>
    <title>Go - 02 - 阅读 gin-vue-admin 代码</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/13/Golang/Go%20-%2002%20-%20%E9%98%85%E8%AF%BB%20gin-vue-admin%20%E4%BB%A3%E7%A0%81/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/13/Golang/Go%20-%2002%20-%20%E9%98%85%E8%AF%BB%20gin-vue-admin%20%E4%BB%A3%E7%A0%81/</id>
    <published>2021-11-13T11:32:38.339Z</published>
    <updated>2021-11-17T06:33:04.419Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="Go-02-阅读-gin-vue-admin-代码"   >          <a href="#Go-02-阅读-gin-vue-admin-代码" class="heading-link"><i class="fas fa-link"></i></a>Go - 02 - 阅读 gin-vue-admin 代码</h1>      <p>通过阅读一个功能齐全的 Curd 应用学习 gin 和 gorm 和 常用库</p><span id="more"></span>        <h2 id="1-基础使用"   >          <a href="#1-基础使用" class="heading-link"><i class="fas fa-link"></i></a>1. 基础使用</h2>      <p>环境说明</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- node版本 &gt; v12.18.3</span><br><span class="line">- golang版本 &gt;= v1.16</span><br><span class="line">- Goland</span><br><span class="line">- vscode</span><br></pre></td></tr></table></div></figure><p>项目官网：<span class="exturl"><a class="exturl__link"   href="https://www.gin-vue-admin.com/" >自动化全栈开发基础平台 | Gin-Vue-Admin</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>点击右上角的 github 克隆源码下来</p><p>项目地址:<span class="exturl"><a class="exturl__link"   href="https://github.com/flipped-aurora/gin-vue-admin" >flipped-aurora/gin-vue-admin: </a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:flipped-aurora/gin-vue-admin.git</span><br></pre></td></tr></table></div></figure><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111151113056.png" alt=""></p><p>然后使用 <code>vscode</code> 打开 web 目录(前端项目), 使用 <code>goland</code> 打开 server 目录(后端项目)。</p><p>在 <code>goland</code> 中打开新终端 , 输入 <code>go generate</code> 同步依赖 , 然后 启动 <code>main.go</code> 中的 <code>main</code> 函数。</p><p>在 <code>vscode</code> 打开新终端 , 输入 <code>npm install</code> 安装前端项目依赖 , 等待安装完成后 , 然后输入 <code>npm run serve</code> 启动控制台前端。</p><p>然后点击 初始化 项目， 填写 mysql 的地址账号密码和 db 名。</p><p>最后打开前端项目就可以使用了。</p><p>详细使用可以参考官网的视频教程。</p>        <h2 id="2-启动入口代码"   >          <a href="#2-启动入口代码" class="heading-link"><i class="fas fa-link"></i></a>2. 启动入口代码</h2>      <p>现在分析下 <code>main.go</code> 里的内容</p>        <h3 id="2-1-go-generate-注释"   >          <a href="#2-1-go-generate-注释" class="heading-link"><i class="fas fa-link"></i></a>2.1 go:generate 注释</h3>      <p><code>go:generate</code> 注释在这里标识了一系列脚本</p><p>在项目目录中使用 <code>go generate</code> 命令 会执行被 <code>go:generate</code> 注释的脚本</p><p>这个脚本可以是任何内容 , 只要再当前环境中可以 执行 即可,一般为 shell script .</p><p>按照推荐做法 , 使用了这个命令最好是生成了一些代码文件</p><blockquote><p> “to automate the running of tools to generate source code before compilation.” </p><p><span class="exturl"><a class="exturl__link"   href="https://golang.org/doc/go1.4#gogenerate" >Go 1.4 Release Notes - The Go Programming Language (golang.org)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p>但是, 在这里, 这个项目中, 使用这个命令的目的是通过命令行设置 go mod 的依赖源, 然后更新依赖.</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111151354549.png" alt=""></p><p>关于这个命令的更多用法可以参考这两篇文章 : 第一篇英文的 一定要看</p><p><span class="exturl"><a class="exturl__link"   href="https://blog.carlmjohnson.net/post/2016-11-27-how-to-use-go-generate/" >How to Use //go:generate · The Ethically-Trained Programmer</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p><span class="exturl"><a class="exturl__link"   href="https://coolshell.cn/articles/21179.html#Go_Generator" >Go 编程模式：Go Generation | 酷 壳 - CoolShell</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="2-2-全局包-global"   >          <a href="#2-2-全局包-global" class="heading-link"><i class="fas fa-link"></i></a>2.2 全局包 global</h3>      <blockquote><p>在这项目中 GVA 是 gin-vue-admin 的缩写</p></blockquote><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111151409100.png" alt=""></p><p>先看第一行代码</p><figure class="highlight go"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">global.GVA_VP = core.Viper()      <span class="comment">// 初始化Viper</span></span><br></pre></td></tr></table></div></figure><p>这行代码中将 <code>global</code> 包 的 <code>GVA_VP</code> 设置为了 <code>core.Viper()</code> 的返回值</p><p>这个 <code>global</code> 声明了一些全局配置变量, 以及 <code>model</code> 中通用的一些属性</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111170951599.png" alt="image-20211117095116510"></p>        <h3 id="2-3-模块管理和包管理"   >          <a href="#2-3-模块管理和包管理" class="heading-link"><i class="fas fa-link"></i></a>2.3 模块管理和包管理</h3>      <p>当我们使用 <code>import</code> 的时候, 我们从哪里 <code>import</code> 了这些代码? </p><p>有三种方式引入包的来源, 我们从安装, 引入和使用三个角度认识这三种方式</p><ol><li>引入 <code>go sdk</code> 的包</li><li>引入 网络上的 的包</li><li>引入 当前项目 的包</li></ol>        <h4 id="2-3-1-引入-go-sdk-的包"   >          <a href="#2-3-1-引入-go-sdk-的包" class="heading-link"><i class="fas fa-link"></i></a>2.3.1 引入 go sdk 的包</h4>      <p><strong>安装</strong></p><p>随 go sdk 安装, 在 goland 中, 显示在这个位置</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171026435.png" alt=""></p><p><strong>引入路径</strong></p><p>引入路径在 <code>GOPATH/src/*</code></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171009671.png" alt=""></p><p>如图所示 <code>database/sql</code> 可以从这个位置引入</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171029793.png" alt=""></p><p>里面有文档, 代码和单测. </p><p><strong>使用</strong></p><p>使用方式和引入方式有关</p><p><span class="exturl"><a class="exturl__link"   href="https://zhuanlan.zhihu.com/p/259392235" >30. Go 语言中关于包导入必学的 8 个知识点 - 知乎 (zhihu.com)</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>使用的时候通过 <code>包名 + 导出变量</code> 使用. </p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171036566.png" alt=""></p>        <h4 id="2-3-2-引入-网络上的-的包"   >          <a href="#2-3-2-引入-网络上的-的包" class="heading-link"><i class="fas fa-link"></i></a>2.3.2 引入 网络上的 的包</h4>      <p><strong>安装</strong></p><p><code>go get -u 你的地址</code></p><p><strong>引入路径</strong></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171049787.png" alt=""></p>        <h4 id="2-3-3-引入-当前项目-的包"   >          <a href="#2-3-3-引入-当前项目-的包" class="heading-link"><i class="fas fa-link"></i></a>2.3.3 引入 当前项目 的包</h4>      <p><strong>声明</strong></p><p>当前项目的名称可以声明在 <code>go mod</code> 中</p><p><code>module xxx</code> 就是模块名, <code>go xxx</code> 是 <code>go sdk</code> 的版本号, <code>require xxx</code> 就是依赖列表</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171057295.png" alt=""></p><p>包名声明在 <code>package xxx</code>, 不一定和文件名对应</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171059580.png" alt=""></p><p><strong>引入</strong></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111171059645.png" alt=""></p>        <h2 id="3-初始化-DB-代码"   >          <a href="#3-初始化-DB-代码" class="heading-link"><i class="fas fa-link"></i></a>3. 初始化 DB 代码</h2>      <p>为什么 可以 通过 web 页配置 db 的配置呢 ?</p><p>他是生成了新的代码, 重写了配置文件吗.</p><p>查看前端项目发现调用 <code>service</code> 名 <code>init/</code></p>        <h2 id="4-目录结构"   >          <a href="#4-目录结构" class="heading-link"><i class="fas fa-link"></i></a>4. 目录结构</h2>              <h2 id="5-基础功能模块"   >          <a href="#5-基础功能模块" class="heading-link"><i class="fas fa-link"></i></a>5. 基础功能模块</h2>      ]]></content>
    
    
    <summary type="html">还是得撸一个</summary>
    
    
    
    <category term="Go" scheme="http://zjeff-953.gitee.io/zjeff/categories/Go/"/>
    
    
    <category term="Go" scheme="http://zjeff-953.gitee.io/zjeff/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes - 01 认识 kubernetes</title>
    <link href="http://zjeff-953.gitee.io/zjeff/2021/11/13/%E4%BA%91%E5%8E%9F%E7%94%9F/kubernetes%20-%2001%20%E8%AE%A4%E8%AF%86%20kubernetes/"/>
    <id>http://zjeff-953.gitee.io/zjeff/2021/11/13/%E4%BA%91%E5%8E%9F%E7%94%9F/kubernetes%20-%2001%20%E8%AE%A4%E8%AF%86%20kubernetes/</id>
    <published>2021-11-13T04:10:39.711Z</published>
    <updated>2021-11-21T13:41:48.196Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="kubernetes-01-认识-kubernetes"   >          <a href="#kubernetes-01-认识-kubernetes" class="heading-link"><i class="fas fa-link"></i></a>kubernetes - 01 认识 kubernetes</h1>      <p>kubernetes 是一个容器编排工具，可以实现容器的网络，发现，监控，负载。由谷歌开发 . </p><p>这里，我们将会介绍 kubernetes 的基本功能，以及什么时候需要使用 kubernetes . </p><p>基本流程和官网的一样,但是会加一点我对于 这些 构件和不同层级抽象的理解 . </p><p>官网的输出内容有点滞后了, 所以我同步了新的输出格式</p><span id="more"></span><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131218966.png" alt="image-20211113121849921"></p>        <h2 id="1-上手-kubernetes"   >          <a href="#1-上手-kubernetes" class="heading-link"><i class="fas fa-link"></i></a>1. 上手 kubernetes</h2>      <p>通常来说，我们应该从安装开始，但是，kubernetes 比较吃资源，而且，官网有很好的预览服务器，所以先用官网预览服务器上手基本的操作好了。</p><p>打开链接</p><p>中文版 ： <span class="exturl"><a class="exturl__link"   href="https://kubernetes.io/zh/docs/tutorials/hello-minikube/" >你好，Minikube | Kubernetes</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>英文版 ： <span class="exturl"><a class="exturl__link"   href="https://kubernetes.io/docs/tutorials/hello-minikube/" >Hello Minikube | Kubernetes</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>点击启动终端，然后会在浏览器中启动一个终端，然后就可以使用了（记得魔法上网）</p><blockquote><p>这里 kubernetes 本体由 kube cli 管理，minikube 是一个轻量级（简陋）的 kubernetes 客户端</p></blockquote><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131239832.png" alt="image-20211113123902736"></p>        <h3 id="1-1-启动控制仪表盘"   >          <a href="#1-1-启动控制仪表盘" class="heading-link"><i class="fas fa-link"></i></a>1.1 启动控制仪表盘</h3>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube dashboard</span><br></pre></td></tr></table></div></figure><p>点击这个指令可以运行，现在点击他，就可以启动 <code>kubernetes dashborad</code> ，里面包含了一系列 <code>kebernetes</code> 的信息和基础功能。</p><p><img src="C:\Users\15727\AppData\Roaming\Typora\typora-user-images\image-20211113145433029.png" alt="image-20211113145433029"></p><p>点击指向的按钮就可以打开 <code>kebernetes dashboard</code></p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131609871.png" alt="image-20211113160912832"></p><p>这样就启动了 <code>kebernetes dashboard</code> 了</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131502199.png" alt="image-20211113150200098"></p><blockquote><p>整个网站的实验环境只会持续一段时间 , 如果时间到了 , 就需要重新创建一个实验环境 , 只需要重复上面的动作, 因为</p></blockquote>        <h3 id="1-2-创建一个-Deployment（部署对象）"   >          <a href="#1-2-创建一个-Deployment（部署对象）" class="heading-link"><i class="fas fa-link"></i></a>1.2 创建一个 Deployment（部署对象）</h3>      <p>我们知道，docker 之间可以构建内网来通信，当我们使用了很多的容器的时候，每个容器的状态，各个不同容器集群的功能组织将会成为一个问题，kubernetes 就提供了这样一个工具，帮助我们拆分容器（方便管理不同用途的容器），监控状态（保证容器和不同服务的正常运作），组织通信（容器之间的数据交换）。</p><p>kubernetes 将容器打包在 pod （资源组/池），每个 pod 中包含一个或者多个容器， Kubernetes Deployment 检查 Pod 的健康状况，并在 Pod 中的容器终止的情况下重新启动新的容器。 Deployment 是管理 Pod 创建和扩展的推荐方法。</p>        <h4 id="1-2-1-创建-Deploymen-并查看-Deployment-的情况"   >          <a href="#1-2-1-创建-Deploymen-并查看-Deployment-的情况" class="heading-link"><i class="fas fa-link"></i></a>1.2.1 创建 Deploymen  并查看 Deployment 的情况</h4>      <p>现在新建一个终端</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131525866.png" alt="image-20211113152518823"></p><p>现在输入下面的这条指令，创建一个新的部署行为</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4</span><br></pre></td></tr></table></div></figure><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131525145.png" alt="image-20211113152532113"></p><p>这条指令的的含义是这样的</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment [deployment名字] --image=[使用的镜像地址]</span><br></pre></td></tr></table></div></figure><p>现在转到仪表盘, 点击 deployment 查看我们已经创建了一个新的部署对象</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131528136.png" alt="image-20211113152828048"></p><p>我们还可以通过命令行查看 deployment 的状态</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectil get deployments</span><br></pre></td></tr></table></div></figure><p>效果如下：</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131532289.png" alt="image-20211113153210263"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get deployments</span></span><br><span class="line">NAME         READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">hello-node   1/1     1            1           5m45s</span><br></pre></td></tr></table></div></figure>        <h4 id="1-2-2-pod-和-deployment-的关系"   >          <a href="#1-2-2-pod-和-deployment-的关系" class="heading-link"><i class="fas fa-link"></i></a>1.2.2 pod 和 deployment 的关系 *</h4>      <p>deployment 包含一个或者多个 pod 的集群 .deployment 只关心 pod 的数量和状态 , pod 停了就整个新的 , 只要维持 pod 的数量 . 所以在 deployment 的属性中不能看到管辖的 pod 的名字 , 我们需要单独的查看 pod 的状态 . </p><p>部署创建的 pod 的 app 属性将会指向 deployment 的名字 , 用来标识对应关系 . </p>        <h4 id="1-2-3-查看-pod-（资源组-池）-的状态"   >          <a href="#1-2-3-查看-pod-（资源组-池）-的状态" class="heading-link"><i class="fas fa-link"></i></a>1.2.3 查看 pod （资源组/池） 的状态</h4>      <p>我们能可以通过 dashboard 查看 pod 的状态</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131544445.png" alt="image-20211113154423349"></p><p>也可通过命令行查看我们的 资源组 状态</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods</span><br></pre></td></tr></table></div></figure><p>效果如下：</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131552577.png" alt="image-20211113155229532"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods</span></span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">hello-node-7567d9fdc9-64mbx   1/1     Running   0          27m</span><br></pre></td></tr></table></div></figure>        <h4 id="1-2-4-查看集群事件"   >          <a href="#1-2-4-查看集群事件" class="heading-link"><i class="fas fa-link"></i></a>1.2.4 查看集群事件</h4>      <p>在 仪表盘 中, 事件是属于各个对象的 , 所以 , 我们需要在不同的对象中查看事件</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131610697.png" alt="image-20211113161016628"></p><p>使用命令行可以查看所有的 事件 .</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get events</span><br></pre></td></tr></table></div></figure><p>效果如下 ( 这里 我 的体验时间过去了, 重新启动了一遍 )</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131601960.png" alt="image-20211113160136912"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get events</span></span><br><span class="line">LAST SEEN   TYPE     REASON                    OBJECT                             MESSAGE</span><br><span class="line">101s        Normal   Scheduled                 pod/hello-node-7567d9fdc9-v6qs5    Successfully assigned default/hello-node-7567d9fdc9-v6qs5 to minikube</span><br><span class="line">100s        Normal   Pulling                   pod/hello-node-7567d9fdc9-v6qs5    Pulling image &quot;k8s.gcr.io/echoserver:1.4&quot;</span><br><span class="line">100s        Normal   Pulled                    pod/hello-node-7567d9fdc9-v6qs5    Successfully pulled image &quot;k8s.gcr.io/echoserver:1.4&quot; in 547.409194ms</span><br><span class="line">100s        Normal   Created                   pod/hello-node-7567d9fdc9-v6qs5    Created container echoserver</span><br><span class="line">99s         Normal   Started                   pod/hello-node-7567d9fdc9-v6qs5    Started container echoserver</span><br><span class="line">101s        Normal   SuccessfulCreate          replicaset/hello-node-7567d9fdc9   Created pod: hello-node-7567d9fdc9-v6qs5</span><br><span class="line">101s        Normal   ScalingReplicaSet         deployment/hello-node              Scaled up replica set hello-node-7567d9fdc9 to 1</span><br><span class="line">9m6s        Normal   NodeHasSufficientMemory   node/minikube                      Node minikube status is now: NodeHasSufficientMemory</span><br><span class="line">9m6s        Normal   NodeHasNoDiskPressure     node/minikube                      Node minikube status is now: NodeHasNoDiskPressure</span><br><span class="line">9m6s        Normal   NodeHasSufficientPID      node/minikube                      Node minikube status is now: NodeHasSufficientPID</span><br><span class="line">8m49s       Normal   Starting                  node/minikube                      Starting kubelet.</span><br><span class="line">8m49s       Normal   NodeHasSufficientMemory   node/minikube                      Node minikube status is now: NodeHasSufficientMemory</span><br><span class="line">8m49s       Normal   NodeHasNoDiskPressure     node/minikube                      Node minikube status is now: NodeHasNoDiskPressure</span><br><span class="line">8m49s       Normal   NodeHasSufficientPID      node/minikube                      Node minikube status is now: NodeHasSufficientPID</span><br><span class="line">8m49s       Normal   NodeAllocatableEnforced   node/minikube                      Updated Node Allocatable limit across pods</span><br><span class="line">8m39s       Normal   RegisteredNode            node/minikube                      Node minikube event: Registered Node minikube in Controller</span><br><span class="line">8m39s       Normal   NodeReady                 node/minikube                      Node minikube status is now: NodeReady</span><br><span class="line">8m37s       Normal   Starting                  node/minikube                      Starting kube-proxy.</span><br></pre></td></tr></table></div></figure>        <h4 id="1-2-5-查看集群配置"   >          <a href="#1-2-5-查看集群配置" class="heading-link"><i class="fas fa-link"></i></a>1.2.5 查看集群配置</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config view</span><br></pre></td></tr></table></div></figure><p>效果如下 : </p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131612651.png" alt="image-20211113161255610"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl config view</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: /root/.minikube/ca.crt</span><br><span class="line">    extensions:</span><br><span class="line">    - extension:</span><br><span class="line">        last-update: Sat, 13 Nov 2021 08:02:27 UTC</span><br><span class="line">        provider: minikube.sigs.k8s.io</span><br><span class="line">        version: v1.18.0</span><br><span class="line">      name: cluster_info</span><br><span class="line">    server: https://172.17.0.51:8443</span><br><span class="line">  name: minikube</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: minikube</span><br><span class="line">    extensions:</span><br><span class="line">    - extension:</span><br><span class="line">        last-update: Sat, 13 Nov 2021 08:02:27 UTC</span><br><span class="line">        provider: minikube.sigs.k8s.io</span><br><span class="line">        version: v1.18.0</span><br><span class="line">      name: context_info</span><br><span class="line">    namespace: default</span><br><span class="line">    user: minikube</span><br><span class="line">  name: minikube</span><br><span class="line">current-context: minikube</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: minikube</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /root/.minikube/profiles/minikube/client.crt</span><br><span class="line">    client-key: /root/.minikube/profiles/minikube/client.key</span><br></pre></td></tr></table></div></figure>        <h3 id="1-3-创建一个-service-服务"   >          <a href="#1-3-创建一个-service-服务" class="heading-link"><i class="fas fa-link"></i></a>1.3 创建一个 service (服务)</h3>              <h4 id="1-3-1-创建一个-service"   >          <a href="#1-3-1-创建一个-service" class="heading-link"><i class="fas fa-link"></i></a>1.3.1 创建一个 service</h4>      <p>service 是 kebernetes 将 pod 向外暴露的方式 , 暴露到公网端口</p><p>pod 在没有使用 service 的时候只能在内部 IP 地址访问</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl expose deployment hello-node --type=LoadBalancer --port=8080</span><br></pre></td></tr></table></div></figure><p>效果如下 : </p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131646071.png" alt="image-20211113164603039"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl expose deployment hello-node --<span class="built_in">type</span>=LoadBalancer --port=8080</span></span><br><span class="line">service/hello-node exposed</span><br></pre></td></tr></table></div></figure><p>这里的 <code>--type=LoadBalancer</code> 参数表明你希望将你的 Service 暴露到集群外部。</p><p>镜像 <code>k8s.gcr.io/echoserver</code> 中的应用程序代码仅监听 TCP 8080 端口。 如果你用 <code>kubectl expose</code> 暴露了其它的端口，客户端将不能访问其它端口。</p>        <h4 id="1-3-2-查看-service-的情况"   >          <a href="#1-3-2-查看-service-的情况" class="heading-link"><i class="fas fa-link"></i></a>1.3.2 查看 service 的情况</h4>      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get services</span><br></pre></td></tr></table></div></figure><p>效果如下 :</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131702403.png" alt="image-20211113170223367"></p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get services</span></span><br><span class="line">kubectl get services</span><br><span class="line"></span><br><span class="line">NAME         TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">hello-node   LoadBalancer   10.99.215.211   &lt;pending&gt;     8080:32102/TCP   8m40s</span><br><span class="line">kubernetes   ClusterIP      10.96.0.1       &lt;none&gt;        443/TCP          52m</span><br></pre></td></tr></table></div></figure><p>现在尝试从浏览器中访问 service</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131704119.png" alt="image-20211113170431083"></p><p>然后可以进入这个页面</p><p><img src="https://gitee.com/zjeff-953/picsBed/raw/master/image/202111131705372.png" alt="image-20211113170530319"></p><p>然后我们可以尝试访问这个 service</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube service hello-node</span><br></pre></td></tr></table></div></figure><p>效果如下</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> minikube service hello-node</span></span><br><span class="line">|-----------|------------|-------------|--------------------------|</span><br><span class="line">| NAMESPACE |    NAME    | TARGET PORT |           URL            |</span><br><span class="line">|-----------|------------|-------------|--------------------------|</span><br><span class="line">| default   | hello-node |        8080 | http://172.17.0.51:32102 |</span><br><span class="line">|-----------|------------|-------------|--------------------------|</span><br><span class="line">* Opening service default/hello-node in default browser...</span><br><span class="line">Minikube Dashboard is not supported via the interactive terminal experience.</span><br><span class="line"></span><br><span class="line">Please click the &#x27;Preview Port 30000&#x27; link above to access the dashboard.</span><br><span class="line">This will now exit. Please continue with the rest of the tutorial.</span><br><span class="line"></span><br><span class="line">X Exiting due to HOST_BROWSER: exit status 1</span><br><span class="line">* </span><br><span class="line">* If the above advice does not help, please let us know: </span><br><span class="line">  - https://github.com/kubernetes/minikube/issues/new/choose</span><br></pre></td></tr></table></div></figure><p>这个表格中后两项表示 , 对 运行 kubernetes 的服务器 的 8080 端口 的访问将会被转发到 kubernetes 网络的这个地址 <span class="exturl"><a class="exturl__link"   href="http://172.17.0.51:32102" >http://172.17.0.51:32102</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> , 然后我们就可以在刚才的页面输入这个端口号就可以访问页面了。</p>        <h3 id="1-4-添加-addons-插件"   >          <a href="#1-4-添加-addons-插件" class="heading-link"><i class="fas fa-link"></i></a>1.4 添加 addons (插件)</h3>      <p>这些插件有什么内容呢 ? 有 服务发现, 服务可视化 等等方面. </p>        <h4 id="1-4-1-查看-插件列表"   >          <a href="#1-4-1-查看-插件列表" class="heading-link"><i class="fas fa-link"></i></a>1.4.1 查看 插件列表</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube addons list</span><br></pre></td></tr></table></div></figure><p>输出结果类似于这样：</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> minikube addons list</span></span><br><span class="line">|-----------------------------|----------|--------------|</span><br><span class="line">|         ADDON NAME          | PROFILE  |    STATUS    |</span><br><span class="line">|-----------------------------|----------|--------------|</span><br><span class="line">| ambassador                  | minikube | disabled     |</span><br><span class="line">| auto-pause                  | minikube | disabled     |</span><br><span class="line">| csi-hostpath-driver         | minikube | disabled     |</span><br><span class="line">| dashboard                   | minikube | enabled ✅   |</span><br><span class="line">| default-storageclass        | minikube | enabled ✅   |</span><br><span class="line">| efk                         | minikube | disabled     |</span><br><span class="line">| freshpod                    | minikube | disabled     |</span><br><span class="line">| gcp-auth                    | minikube | disabled     |</span><br><span class="line">| gvisor                      | minikube | disabled     |</span><br><span class="line">| helm-tiller                 | minikube | disabled     |</span><br><span class="line">| ingress                     | minikube | disabled     |</span><br><span class="line">| ingress-dns                 | minikube | disabled     |</span><br><span class="line">| istio                       | minikube | disabled     |</span><br><span class="line">| istio-provisioner           | minikube | disabled     |</span><br><span class="line">| kubevirt                    | minikube | disabled     |</span><br><span class="line">| logviewer                   | minikube | disabled     |</span><br><span class="line">| metallb                     | minikube | disabled     |</span><br><span class="line">| metrics-server              | minikube | enabled ✅   |</span><br><span class="line">| nvidia-driver-installer     | minikube | disabled     |</span><br><span class="line">| nvidia-gpu-device-plugin    | minikube | disabled     |</span><br><span class="line">| olm                         | minikube | disabled     |</span><br><span class="line">| pod-security-policy         | minikube | disabled     |</span><br><span class="line">| registry                    | minikube | disabled     |</span><br><span class="line">| registry-aliases            | minikube | disabled     |</span><br><span class="line">| registry-creds              | minikube | disabled     |</span><br><span class="line">| storage-provisioner         | minikube | enabled ✅   |</span><br><span class="line">| storage-provisioner-gluster | minikube | disabled     |</span><br><span class="line">| volumesnapshots             | minikube | disabled     |</span><br><span class="line">|-----------------------------|----------|--------------|</span><br></pre></td></tr></table></div></figure>        <h4 id="1-4-2-添加插件"   >          <a href="#1-4-2-添加插件" class="heading-link"><i class="fas fa-link"></i></a>1.4.2 添加插件</h4>      <p>添加 <code>metrics-server</code> 插件</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube addons enable metrics-server</span><br></pre></td></tr></table></div></figure><p>输出结果如下</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> minikube addons <span class="built_in">enable</span> metrics-server</span></span><br><span class="line">  - Using image k8s.gcr.io/metrics-server-amd64:v0.2.1</span><br><span class="line">* The &#x27;metrics-server&#x27; addon is enabled</span><br></pre></td></tr></table></div></figure><p>查看 这个插件的效果 </p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod,svc -n kube-system</span><br></pre></td></tr></table></div></figure><p>输出结果类似这样, 可以看到 多出了类似 <code>service/metrics-server</code> 相关的内容</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pod,svc -n kube-system</span></span><br><span class="line">NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/coredns-74ff55c5b-4r6b2            1/1     Running   0          27m</span><br><span class="line">pod/etcd-minikube                      1/1     Running   0          27m</span><br><span class="line">pod/kube-apiserver-minikube            1/1     Running   0          27m</span><br><span class="line">pod/kube-controller-manager-minikube   1/1     Running   0          27m</span><br><span class="line">pod/kube-proxy-m95zs                   1/1     Running   0          27m</span><br><span class="line">pod/kube-scheduler-minikube            1/1     Running   0          27m</span><br><span class="line">pod/metrics-server-56c4f8c9d6-l28f7    1/1     Running   0          27m</span><br><span class="line">pod/storage-provisioner                1/1     Running   0          27m</span><br><span class="line"></span><br><span class="line">NAME                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/kube-dns         ClusterIP   10.96.0.10       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   27m</span><br><span class="line">service/metrics-server   ClusterIP   10.103.144.127   &lt;none&gt;        443/TCP                  27m</span><br></pre></td></tr></table></div></figure>        <h4 id="1-4-3-禁用插件"   >          <a href="#1-4-3-禁用插件" class="heading-link"><i class="fas fa-link"></i></a>1.4.3 禁用插件</h4>      <figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube addons disable metrics-server</span><br></pre></td></tr></table></div></figure><p>结果如下：</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> minikube addons <span class="built_in">disable</span> metrics-server</span></span><br><span class="line">  - Using image k8s.gcr.io/metrics-server-amd64:v0.2.1</span><br><span class="line">* &quot;The &#x27;metrics-server&#x27; addon is disabled</span><br></pre></td></tr></table></div></figure>        <h3 id="1-5-清除资源-Deployment-service-VM"   >          <a href="#1-5-清除资源-Deployment-service-VM" class="heading-link"><i class="fas fa-link"></i></a>1.5 清除资源 (Deployment/service/VM)</h3>              <h4 id="1-5-1-清除-Deployment-service"   >          <a href="#1-5-1-清除-Deployment-service" class="heading-link"><i class="fas fa-link"></i></a>1.5.1 清除 Deployment/service</h4>      <p>使用 <code>kubectl delete</code> 清除资源</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete service hello-node</span><br><span class="line">kubectl delete deployment hello-node</span><br></pre></td></tr></table></div></figure><p>结果如下</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl delete service   hello-node</span></span><br><span class="line">service &quot;hello-node&quot; deleted</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl delete deployment hello-node</span></span><br><span class="line">deployment.apps &quot;hello-node&quot; deleted</span><br></pre></td></tr></table></div></figure>        <h4 id="1-5-2-清除-VM"   >          <a href="#1-5-2-清除-VM" class="heading-link"><i class="fas fa-link"></i></a>1.5.2 清除 VM</h4>      <p>停止 VM</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube stop</span><br></pre></td></tr></table></div></figure><p>删除 VM</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube delete</span><br></pre></td></tr></table></div></figure><p>结果如下</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> minikube stop</span></span><br><span class="line">* Stopping node &quot;minikube&quot;  ...</span><br><span class="line">* 1 nodes stopped.</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> minikube delete</span></span><br><span class="line">* Uninstalling Kubernetes v1.20.2 using kubeadm ...</span><br><span class="line">* Deleting &quot;minikube&quot; in none ...</span><br><span class="line">* Removed all traces of the &quot;minikube&quot; cluster.</span><br></pre></td></tr></table></div></figure>        <h2 id="2-使用-Minikube-创建集群"   >          <a href="#2-使用-Minikube-创建集群" class="heading-link"><i class="fas fa-link"></i></a>2 使用 Minikube 创建集群</h2>              <h3 id="2-1-Kubernetes-基本概念"   >          <a href="#2-1-Kubernetes-基本概念" class="heading-link"><i class="fas fa-link"></i></a>2.1 Kubernetes 基本概念</h3>      <p>Kubernetes 主要功能是 自动管理和调动容器</p><p>一个 Kubernetes 集群包含两种类型的资源:</p><ul><li><strong>Master（主调度节点）</strong> 调度整个集群</li><li><strong>Nodes（运行节点）</strong> 负责运行应用</li></ul><p><strong>Master 负责管理整个集群。</strong> </p><ol><li>Master 协调集群中的所有活动，例如调度应用、维护应用的所需状态、应用扩容以及推出新的更新。</li></ol><p><strong>Node 是一个虚拟机或者物理机，它在 Kubernetes 集群中充当工作机器的角色</strong> </p><ol><li>每个Node都有 Kubelet , 它管理 Node 而且是 Node 与 Master 通信的代理。 </li><li>Node 还应该具有用于处理容器操作的工具，例如 Docker 或 rkt 。</li><li>处理生产级流量的 Kubernetes 集群至少应具有三个 Node 。</li></ol><p><strong>Node 使用 Master 暴露的 Kubernetes API 与 Master 通信。</strong></p><p>Kubernetes 既可以部署在物理机上也可以部署在虚拟机上。</p><p>您可以使用 Minikube 开始部署 Kubernetes 集群。 </p><p>Minikube 是一种轻量级的 Kubernetes 实现，可在本地计算机上创建 VM 并部署仅包含一个节点的简单集群。</p>        <h3 id="2-2-创建-kubernetes-集群"   >          <a href="#2-2-创建-kubernetes-集群" class="heading-link"><i class="fas fa-link"></i></a>2.2 创建 kubernetes 集群</h3>      <p>一个 kubernetes 集群需要</p><p><strong>Keep Curious! Keep Learning! </strong></p>]]></content>
    
    
    <summary type="html">kubernetes</summary>
    
    
    
    <category term="kubernetes" scheme="http://zjeff-953.gitee.io/zjeff/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="http://zjeff-953.gitee.io/zjeff/tags/kubernetes/"/>
    
  </entry>
  
</feed>
